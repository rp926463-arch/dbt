{"creation_time": "2024-07-18T05:35:14+00:00", "days_back": 7, "models": {"model.dbt_demo.my_first_dbt_model": {"name": "my_first_dbt_model", "unique_id": "model.dbt_demo.my_first_dbt_model", "owners": [], "tags": [], "package_name": "dbt_demo", "description": "A starter dbt model", "full_path": "models/dbt_test/example/my_first_dbt_model.sql", "meta": {}, "materialization": "table", "database_name": "dbt_test", "schema_name": "seeds", "table_name": "my_first_dbt_model", "patch_path": "dbt_demo://models\\dbt_test\\example\\schema.yml", "model_name": "my_first_dbt_model", "normalized_full_path": "dbt_demo/models/dbt_test/example/my_first_dbt_model.sql", "fqn": "dbt_test.seeds.my_first_dbt_model", "artifact_type": "model"}, "model.dbt_demo.my_second_dbt_model": {"name": "my_second_dbt_model", "unique_id": "model.dbt_demo.my_second_dbt_model", "owners": [], "tags": [], "package_name": "dbt_demo", "description": "A starter dbt model", "full_path": "models/dbt_test/example/my_second_dbt_model.sql", "meta": {}, "materialization": "view", "database_name": "dbt_test", "schema_name": "seeds", "table_name": "my_second_dbt_model", "patch_path": "dbt_demo://models\\dbt_test\\example\\schema.yml", "model_name": "my_second_dbt_model", "normalized_full_path": "dbt_demo/models/dbt_test/example/my_second_dbt_model.sql", "fqn": "dbt_test.seeds.my_second_dbt_model", "artifact_type": "model"}, "model.dbt_artifacts.dim_dbt__current_models": {"name": "dim_dbt__current_models", "unique_id": "model.dbt_artifacts.dim_dbt__current_models", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Dimension model that contains data about models' most recent successful runs", "full_path": "models/dim_dbt__current_models.sql", "meta": {}, "materialization": "view", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "dim_dbt__current_models", "patch_path": "dbt_artifacts://models\\dim_dbt__current_models.yml", "model_name": "dim_dbt__current_models", "normalized_full_path": "dbt_artifacts/models/dim_dbt__current_models.sql", "fqn": "pipeline_logs.dbt_logs.dim_dbt__current_models", "artifact_type": "model"}, "model.dbt_artifacts.dim_dbt__exposures": {"name": "dim_dbt__exposures", "unique_id": "model.dbt_artifacts.dim_dbt__exposures", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Dimension model that contains data about exposures.", "full_path": "models/dim_dbt__exposures.sql", "meta": {}, "materialization": "view", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "dim_dbt__exposures", "patch_path": "dbt_artifacts://models\\dim_dbt__exposures.yml", "model_name": "dim_dbt__exposures", "normalized_full_path": "dbt_artifacts/models/dim_dbt__exposures.sql", "fqn": "pipeline_logs.dbt_logs.dim_dbt__exposures", "artifact_type": "model"}, "model.dbt_artifacts.dim_dbt__models": {"name": "dim_dbt__models", "unique_id": "model.dbt_artifacts.dim_dbt__models", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Dimension model that contains data about models.", "full_path": "models/dim_dbt__models.sql", "meta": {}, "materialization": "view", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "dim_dbt__models", "patch_path": "dbt_artifacts://models\\dim_dbt__models.yml", "model_name": "dim_dbt__models", "normalized_full_path": "dbt_artifacts/models/dim_dbt__models.sql", "fqn": "pipeline_logs.dbt_logs.dim_dbt__models", "artifact_type": "model"}, "model.dbt_artifacts.dim_dbt__seeds": {"name": "dim_dbt__seeds", "unique_id": "model.dbt_artifacts.dim_dbt__seeds", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Dimension model that contains data about seeds.", "full_path": "models/dim_dbt__seeds.sql", "meta": {}, "materialization": "view", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "dim_dbt__seeds", "patch_path": "dbt_artifacts://models\\dim_dbt__seeds.yml", "model_name": "dim_dbt__seeds", "normalized_full_path": "dbt_artifacts/models/dim_dbt__seeds.sql", "fqn": "pipeline_logs.dbt_logs.dim_dbt__seeds", "artifact_type": "model"}, "model.dbt_artifacts.dim_dbt__snapshots": {"name": "dim_dbt__snapshots", "unique_id": "model.dbt_artifacts.dim_dbt__snapshots", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Dimension model that contains data about snapshots.", "full_path": "models/dim_dbt__snapshots.sql", "meta": {}, "materialization": "view", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "dim_dbt__snapshots", "patch_path": "dbt_artifacts://models\\dim_dbt__snapshots.yml", "model_name": "dim_dbt__snapshots", "normalized_full_path": "dbt_artifacts/models/dim_dbt__snapshots.sql", "fqn": "pipeline_logs.dbt_logs.dim_dbt__snapshots", "artifact_type": "model"}, "model.dbt_artifacts.dim_dbt__sources": {"name": "dim_dbt__sources", "unique_id": "model.dbt_artifacts.dim_dbt__sources", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Dimension model that contains data about sources.", "full_path": "models/dim_dbt__sources.sql", "meta": {}, "materialization": "view", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "dim_dbt__sources", "patch_path": "dbt_artifacts://models\\dim_dbt__sources.yml", "model_name": "dim_dbt__sources", "normalized_full_path": "dbt_artifacts/models/dim_dbt__sources.sql", "fqn": "pipeline_logs.dbt_logs.dim_dbt__sources", "artifact_type": "model"}, "model.dbt_artifacts.dim_dbt__tests": {"name": "dim_dbt__tests", "unique_id": "model.dbt_artifacts.dim_dbt__tests", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Dimension model that contains data about tests.", "full_path": "models/dim_dbt__tests.sql", "meta": {}, "materialization": "view", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "dim_dbt__tests", "patch_path": "dbt_artifacts://models\\dim_dbt__tests.yml", "model_name": "dim_dbt__tests", "normalized_full_path": "dbt_artifacts/models/dim_dbt__tests.sql", "fqn": "pipeline_logs.dbt_logs.dim_dbt__tests", "artifact_type": "model"}, "model.dbt_artifacts.fct_dbt__invocations": {"name": "fct_dbt__invocations", "unique_id": "model.dbt_artifacts.fct_dbt__invocations", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Fact model that contains data about invocations.", "full_path": "models/fct_dbt__invocations.sql", "meta": {}, "materialization": "view", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "fct_dbt__invocations", "patch_path": "dbt_artifacts://models\\fct_dbt__invocations.yml", "model_name": "fct_dbt__invocations", "normalized_full_path": "dbt_artifacts/models/fct_dbt__invocations.sql", "fqn": "pipeline_logs.dbt_logs.fct_dbt__invocations", "artifact_type": "model"}, "model.dbt_artifacts.fct_dbt__model_executions": {"name": "fct_dbt__model_executions", "unique_id": "model.dbt_artifacts.fct_dbt__model_executions", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Fact model that contains data about model executions.", "full_path": "models/fct_dbt__model_executions.sql", "meta": {}, "materialization": "view", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "fct_dbt__model_executions", "patch_path": "dbt_artifacts://models\\fct_dbt__model_executions.yml", "model_name": "fct_dbt__model_executions", "normalized_full_path": "dbt_artifacts/models/fct_dbt__model_executions.sql", "fqn": "pipeline_logs.dbt_logs.fct_dbt__model_executions", "artifact_type": "model"}, "model.dbt_artifacts.fct_dbt__seed_executions": {"name": "fct_dbt__seed_executions", "unique_id": "model.dbt_artifacts.fct_dbt__seed_executions", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Fact model that contains data about seed executions.", "full_path": "models/fct_dbt__seed_executions.sql", "meta": {}, "materialization": "view", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "fct_dbt__seed_executions", "patch_path": "dbt_artifacts://models\\fct_dbt__seed_executions.yml", "model_name": "fct_dbt__seed_executions", "normalized_full_path": "dbt_artifacts/models/fct_dbt__seed_executions.sql", "fqn": "pipeline_logs.dbt_logs.fct_dbt__seed_executions", "artifact_type": "model"}, "model.dbt_artifacts.fct_dbt__snapshot_executions": {"name": "fct_dbt__snapshot_executions", "unique_id": "model.dbt_artifacts.fct_dbt__snapshot_executions", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Fact model that contains data about snapshot executions.", "full_path": "models/fct_dbt__snapshot_executions.sql", "meta": {}, "materialization": "view", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "fct_dbt__snapshot_executions", "patch_path": "dbt_artifacts://models\\fct_dbt__snapshot_executions.yml", "model_name": "fct_dbt__snapshot_executions", "normalized_full_path": "dbt_artifacts/models/fct_dbt__snapshot_executions.sql", "fqn": "pipeline_logs.dbt_logs.fct_dbt__snapshot_executions", "artifact_type": "model"}, "model.dbt_artifacts.fct_dbt__test_executions": {"name": "fct_dbt__test_executions", "unique_id": "model.dbt_artifacts.fct_dbt__test_executions", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Fact model that contains data about test executions.", "full_path": "models/fct_dbt__test_executions.sql", "meta": {}, "materialization": "view", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "fct_dbt__test_executions", "patch_path": "dbt_artifacts://models\\fct_dbt__test_executions.yml", "model_name": "fct_dbt__test_executions", "normalized_full_path": "dbt_artifacts/models/fct_dbt__test_executions.sql", "fqn": "pipeline_logs.dbt_logs.fct_dbt__test_executions", "artifact_type": "model"}, "model.dbt_artifacts.exposures": {"name": "exposures", "unique_id": "model.dbt_artifacts.exposures", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Base model for data about exposure exections. One row per node per run.", "full_path": "models/sources/exposures.sql", "meta": {}, "materialization": "incremental", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "exposures", "patch_path": "dbt_artifacts://models\\sources\\exposures.yml", "model_name": "exposures", "normalized_full_path": "dbt_artifacts/models/sources/exposures.sql", "fqn": "pipeline_logs.dbt_logs.exposures", "artifact_type": "model"}, "model.dbt_artifacts.invocations": {"name": "invocations", "unique_id": "model.dbt_artifacts.invocations", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Base model for data about the invocations of dbt. One row per run.", "full_path": "models/sources/invocations.sql", "meta": {}, "materialization": "incremental", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "invocations", "patch_path": "dbt_artifacts://models\\sources\\invocations.yml", "model_name": "invocations", "normalized_full_path": "dbt_artifacts/models/sources/invocations.sql", "fqn": "pipeline_logs.dbt_logs.invocations", "artifact_type": "model"}, "model.dbt_artifacts.models": {"name": "models", "unique_id": "model.dbt_artifacts.models", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Staging model that contains metadata about model executions. One row per node per run.", "full_path": "models/sources/models.sql", "meta": {}, "materialization": "incremental", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "models", "patch_path": "dbt_artifacts://models\\sources\\models.yml", "model_name": "models", "normalized_full_path": "dbt_artifacts/models/sources/models.sql", "fqn": "pipeline_logs.dbt_logs.models", "artifact_type": "model"}, "model.dbt_artifacts.model_executions": {"name": "model_executions", "unique_id": "model.dbt_artifacts.model_executions", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Base model for data about model executions. One row per model execution.", "full_path": "models/sources/model_executions.sql", "meta": {}, "materialization": "incremental", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "model_executions", "patch_path": "dbt_artifacts://models\\sources\\model_executions.yml", "model_name": "model_executions", "normalized_full_path": "dbt_artifacts/models/sources/model_executions.sql", "fqn": "pipeline_logs.dbt_logs.model_executions", "artifact_type": "model"}, "model.dbt_artifacts.seeds": {"name": "seeds", "unique_id": "model.dbt_artifacts.seeds", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Base model for metadata about seed executions. One row per node per run.", "full_path": "models/sources/seeds.sql", "meta": {}, "materialization": "incremental", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "seeds", "patch_path": "dbt_artifacts://models\\sources\\seeds.yml", "model_name": "seeds", "normalized_full_path": "dbt_artifacts/models/sources/seeds.sql", "fqn": "pipeline_logs.dbt_logs.seeds", "artifact_type": "model"}, "model.dbt_artifacts.seed_executions": {"name": "seed_executions", "unique_id": "model.dbt_artifacts.seed_executions", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Base model for data about seed executions. One row per seed execution.", "full_path": "models/sources/seed_executions.sql", "meta": {}, "materialization": "incremental", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "seed_executions", "patch_path": "dbt_artifacts://models\\sources\\seed_executions.yml", "model_name": "seed_executions", "normalized_full_path": "dbt_artifacts/models/sources/seed_executions.sql", "fqn": "pipeline_logs.dbt_logs.seed_executions", "artifact_type": "model"}, "model.dbt_artifacts.snapshots": {"name": "snapshots", "unique_id": "model.dbt_artifacts.snapshots", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Base model for metadata about seed executions. One row per node per run.", "full_path": "models/sources/snapshots.sql", "meta": {}, "materialization": "incremental", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "snapshots", "patch_path": "dbt_artifacts://models\\sources\\snapshots.yml", "model_name": "snapshots", "normalized_full_path": "dbt_artifacts/models/sources/snapshots.sql", "fqn": "pipeline_logs.dbt_logs.snapshots", "artifact_type": "model"}, "model.dbt_artifacts.snapshot_executions": {"name": "snapshot_executions", "unique_id": "model.dbt_artifacts.snapshot_executions", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Base model for data about snapshot executions. One row per snapshot execution.", "full_path": "models/sources/snapshot_executions.sql", "meta": {}, "materialization": "incremental", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "snapshot_executions", "patch_path": "dbt_artifacts://models\\sources\\snapshot_executions.yml", "model_name": "snapshot_executions", "normalized_full_path": "dbt_artifacts/models/sources/snapshot_executions.sql", "fqn": "pipeline_logs.dbt_logs.snapshot_executions", "artifact_type": "model"}, "model.dbt_artifacts.sources": {"name": "sources", "unique_id": "model.dbt_artifacts.sources", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Base model for data about sources. One row per node per execution.", "full_path": "models/sources/sources.sql", "meta": {}, "materialization": "incremental", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "sources", "patch_path": "dbt_artifacts://models\\sources\\sources.yml", "model_name": "sources", "normalized_full_path": "dbt_artifacts/models/sources/sources.sql", "fqn": "pipeline_logs.dbt_logs.sources", "artifact_type": "model"}, "model.dbt_artifacts.tests": {"name": "tests", "unique_id": "model.dbt_artifacts.tests", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Base model for metadata about test executions. One row per node per run.", "full_path": "models/sources/tests.sql", "meta": {}, "materialization": "incremental", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "tests", "patch_path": "dbt_artifacts://models\\sources\\tests.yml", "model_name": "tests", "normalized_full_path": "dbt_artifacts/models/sources/tests.sql", "fqn": "pipeline_logs.dbt_logs.tests", "artifact_type": "model"}, "model.dbt_artifacts.test_executions": {"name": "test_executions", "unique_id": "model.dbt_artifacts.test_executions", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Base model for metadata about test executions. One row per test execution.", "full_path": "models/sources/test_executions.sql", "meta": {}, "materialization": "incremental", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "test_executions", "patch_path": "dbt_artifacts://models\\sources\\test_executions.yml", "model_name": "test_executions", "normalized_full_path": "dbt_artifacts/models/sources/test_executions.sql", "fqn": "pipeline_logs.dbt_logs.test_executions", "artifact_type": "model"}, "model.dbt_artifacts.stg_dbt__exposures": {"name": "stg_dbt__exposures", "unique_id": "model.dbt_artifacts.stg_dbt__exposures", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Staging model that contains data about exposure exections. One row per node per run.", "full_path": "models/staging/stg_dbt__exposures.sql", "meta": {}, "materialization": "view", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "stg_dbt__exposures", "patch_path": "dbt_artifacts://models\\staging\\stg_dbt__exposures.yml", "model_name": "stg_dbt__exposures", "normalized_full_path": "dbt_artifacts/models/staging/stg_dbt__exposures.sql", "fqn": "pipeline_logs.dbt_logs.stg_dbt__exposures", "artifact_type": "model"}, "model.dbt_artifacts.stg_dbt__invocations": {"name": "stg_dbt__invocations", "unique_id": "model.dbt_artifacts.stg_dbt__invocations", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Staging model that contains data about the invocations of dbt. One row per run.", "full_path": "models/staging/stg_dbt__invocations.sql", "meta": {}, "materialization": "view", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "stg_dbt__invocations", "patch_path": "dbt_artifacts://models\\staging\\stg_dbt__invocations.yml", "model_name": "stg_dbt__invocations", "normalized_full_path": "dbt_artifacts/models/staging/stg_dbt__invocations.sql", "fqn": "pipeline_logs.dbt_logs.stg_dbt__invocations", "artifact_type": "model"}, "model.dbt_artifacts.stg_dbt__models": {"name": "stg_dbt__models", "unique_id": "model.dbt_artifacts.stg_dbt__models", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Staging model that contains metadata about model executions. One row per node per run.", "full_path": "models/staging/stg_dbt__models.sql", "meta": {}, "materialization": "view", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "stg_dbt__models", "patch_path": "dbt_artifacts://models\\staging\\stg_dbt__models.yml", "model_name": "stg_dbt__models", "normalized_full_path": "dbt_artifacts/models/staging/stg_dbt__models.sql", "fqn": "pipeline_logs.dbt_logs.stg_dbt__models", "artifact_type": "model"}, "model.dbt_artifacts.stg_dbt__model_executions": {"name": "stg_dbt__model_executions", "unique_id": "model.dbt_artifacts.stg_dbt__model_executions", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Staging model that contains data about model executions. One row per model execution.", "full_path": "models/staging/stg_dbt__model_executions.sql", "meta": {}, "materialization": "view", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "stg_dbt__model_executions", "patch_path": "dbt_artifacts://models\\staging\\stg_dbt__model_executions.yml", "model_name": "stg_dbt__model_executions", "normalized_full_path": "dbt_artifacts/models/staging/stg_dbt__model_executions.sql", "fqn": "pipeline_logs.dbt_logs.stg_dbt__model_executions", "artifact_type": "model"}, "model.dbt_artifacts.stg_dbt__seeds": {"name": "stg_dbt__seeds", "unique_id": "model.dbt_artifacts.stg_dbt__seeds", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Stageing model that contains metadata about seed executions. One row per node per run.", "full_path": "models/staging/stg_dbt__seeds.sql", "meta": {}, "materialization": "view", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "stg_dbt__seeds", "patch_path": "dbt_artifacts://models\\staging\\stg_dbt__seeds.yml", "model_name": "stg_dbt__seeds", "normalized_full_path": "dbt_artifacts/models/staging/stg_dbt__seeds.sql", "fqn": "pipeline_logs.dbt_logs.stg_dbt__seeds", "artifact_type": "model"}, "model.dbt_artifacts.stg_dbt__seed_executions": {"name": "stg_dbt__seed_executions", "unique_id": "model.dbt_artifacts.stg_dbt__seed_executions", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Staging model that contains data about seed executions. One row per seed execution.", "full_path": "models/staging/stg_dbt__seed_executions.sql", "meta": {}, "materialization": "view", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "stg_dbt__seed_executions", "patch_path": "dbt_artifacts://models\\staging\\stg_dbt__seed_executions.yml", "model_name": "stg_dbt__seed_executions", "normalized_full_path": "dbt_artifacts/models/staging/stg_dbt__seed_executions.sql", "fqn": "pipeline_logs.dbt_logs.stg_dbt__seed_executions", "artifact_type": "model"}, "model.dbt_artifacts.stg_dbt__snapshots": {"name": "stg_dbt__snapshots", "unique_id": "model.dbt_artifacts.stg_dbt__snapshots", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Staging model that contains metadata about seed executions. One row per node per run.", "full_path": "models/staging/stg_dbt__snapshots.sql", "meta": {}, "materialization": "view", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "stg_dbt__snapshots", "patch_path": "dbt_artifacts://models\\staging\\stg_dbt__snapshots.yml", "model_name": "stg_dbt__snapshots", "normalized_full_path": "dbt_artifacts/models/staging/stg_dbt__snapshots.sql", "fqn": "pipeline_logs.dbt_logs.stg_dbt__snapshots", "artifact_type": "model"}, "model.dbt_artifacts.stg_dbt__snapshot_executions": {"name": "stg_dbt__snapshot_executions", "unique_id": "model.dbt_artifacts.stg_dbt__snapshot_executions", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Staging model that contains data about snapshot executions. One row per snapshot execution.", "full_path": "models/staging/stg_dbt__snapshot_executions.sql", "meta": {}, "materialization": "view", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "stg_dbt__snapshot_executions", "patch_path": "dbt_artifacts://models\\staging\\stg_dbt__snapshot_executions.yml", "model_name": "stg_dbt__snapshot_executions", "normalized_full_path": "dbt_artifacts/models/staging/stg_dbt__snapshot_executions.sql", "fqn": "pipeline_logs.dbt_logs.stg_dbt__snapshot_executions", "artifact_type": "model"}, "model.dbt_artifacts.stg_dbt__sources": {"name": "stg_dbt__sources", "unique_id": "model.dbt_artifacts.stg_dbt__sources", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Staging model that contains data about sources. One row per node per execution.", "full_path": "models/staging/stg_dbt__sources.sql", "meta": {}, "materialization": "view", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "stg_dbt__sources", "patch_path": "dbt_artifacts://models\\staging\\stg_dbt__sources.yml", "model_name": "stg_dbt__sources", "normalized_full_path": "dbt_artifacts/models/staging/stg_dbt__sources.sql", "fqn": "pipeline_logs.dbt_logs.stg_dbt__sources", "artifact_type": "model"}, "model.dbt_artifacts.stg_dbt__tests": {"name": "stg_dbt__tests", "unique_id": "model.dbt_artifacts.stg_dbt__tests", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Staging model that contains metadata about test executions. One row per node per run.", "full_path": "models/staging/stg_dbt__tests.sql", "meta": {}, "materialization": "view", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "stg_dbt__tests", "patch_path": "dbt_artifacts://models\\staging\\stg_dbt__tests.yml", "model_name": "stg_dbt__tests", "normalized_full_path": "dbt_artifacts/models/staging/stg_dbt__tests.sql", "fqn": "pipeline_logs.dbt_logs.stg_dbt__tests", "artifact_type": "model"}, "model.dbt_artifacts.stg_dbt__test_executions": {"name": "stg_dbt__test_executions", "unique_id": "model.dbt_artifacts.stg_dbt__test_executions", "owners": [], "tags": [], "package_name": "dbt_artifacts", "description": "Staging model that contains metadata about test executions. One row per test execution.", "full_path": "models/staging/stg_dbt__test_executions.sql", "meta": {}, "materialization": "view", "database_name": "pipeline_logs", "schema_name": "dbt_logs", "table_name": "stg_dbt__test_executions", "patch_path": "dbt_artifacts://models\\staging\\stg_dbt__test_executions.yml", "model_name": "stg_dbt__test_executions", "normalized_full_path": "dbt_artifacts/models/staging/stg_dbt__test_executions.sql", "fqn": "pipeline_logs.dbt_logs.stg_dbt__test_executions", "artifact_type": "model"}, "model.dbt_demo.test_dbt_model": {"name": "test_dbt_model", "unique_id": "model.dbt_demo.test_dbt_model", "owners": [], "tags": [], "package_name": "dbt_demo", "description": "A starter dbt model", "full_path": "models/staging/test_model/test_dbt_model.sql", "meta": {}, "materialization": "table", "database_name": "dbt_test", "schema_name": "staging", "table_name": "test_dbt_model", "patch_path": "dbt_demo://models\\staging\\test_model\\test_dbt_model.yml", "model_name": "test_dbt_model", "normalized_full_path": "dbt_demo/models/staging/test_model/test_dbt_model.sql", "fqn": "dbt_test.staging.test_dbt_model", "artifact_type": "model"}, "source.dbt_demo.test_source.seattle": {"name": "seattle", "unique_id": "source.dbt_demo.test_source.seattle", "owners": [], "tags": [], "package_name": "dbt_demo", "description": "", "full_path": "models/staging/test_model/_sources.yml", "meta": {}, "materialization": null, "source_name": "test_source", "database_name": "DBT_TEST", "schema_name": "seeds", "table_name": "seattle", "model_name": "seattle", "normalized_full_path": "dbt_demo/models/staging/test_model/_sources.yml", "fqn": "dbt_test.seeds.seattle", "artifact_type": "source"}}, "groups": {"dbt": {"dbt_demo": {"models": {"dbt_test": {"example": {"__files__": [{"node_id": "model.dbt_demo.my_first_dbt_model", "resource_type": "model"}, {"node_id": "model.dbt_demo.my_second_dbt_model", "resource_type": "model"}]}}, "staging": {"test_model": {"__files__": [{"node_id": "model.dbt_demo.test_dbt_model", "resource_type": "model"}, {"node_id": "source.dbt_demo.test_source.seattle", "resource_type": "source"}]}}}}, "dbt_artifacts": {"models": {"__files__": [{"node_id": "model.dbt_artifacts.dim_dbt__current_models", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.dim_dbt__exposures", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.dim_dbt__models", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.dim_dbt__seeds", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.dim_dbt__snapshots", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.dim_dbt__sources", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.dim_dbt__tests", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.fct_dbt__invocations", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.fct_dbt__model_executions", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.fct_dbt__seed_executions", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.fct_dbt__snapshot_executions", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.fct_dbt__test_executions", "resource_type": "model"}], "sources": {"__files__": [{"node_id": "model.dbt_artifacts.exposures", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.invocations", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.models", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.model_executions", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.seeds", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.seed_executions", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.snapshots", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.snapshot_executions", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.sources", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.tests", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.test_executions", "resource_type": "model"}]}, "staging": {"__files__": [{"node_id": "model.dbt_artifacts.stg_dbt__exposures", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.stg_dbt__invocations", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.stg_dbt__models", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.stg_dbt__model_executions", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.stg_dbt__seeds", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.stg_dbt__seed_executions", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.stg_dbt__snapshots", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.stg_dbt__snapshot_executions", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.stg_dbt__sources", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.stg_dbt__tests", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.stg_dbt__test_executions", "resource_type": "model"}]}}}}, "tags": {"No tags": [{"node_id": "model.dbt_demo.my_first_dbt_model", "resource_type": "model"}, {"node_id": "model.dbt_demo.my_second_dbt_model", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.dim_dbt__current_models", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.dim_dbt__exposures", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.dim_dbt__models", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.dim_dbt__seeds", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.dim_dbt__snapshots", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.dim_dbt__sources", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.dim_dbt__tests", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.fct_dbt__invocations", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.fct_dbt__model_executions", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.fct_dbt__seed_executions", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.fct_dbt__snapshot_executions", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.fct_dbt__test_executions", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.exposures", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.invocations", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.models", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.model_executions", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.seeds", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.seed_executions", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.snapshots", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.snapshot_executions", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.sources", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.tests", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.test_executions", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.stg_dbt__exposures", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.stg_dbt__invocations", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.stg_dbt__models", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.stg_dbt__model_executions", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.stg_dbt__seeds", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.stg_dbt__seed_executions", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.stg_dbt__snapshots", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.stg_dbt__snapshot_executions", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.stg_dbt__sources", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.stg_dbt__tests", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.stg_dbt__test_executions", "resource_type": "model"}, {"node_id": "model.dbt_demo.test_dbt_model", "resource_type": "model"}, {"node_id": "source.dbt_demo.test_source.seattle", "resource_type": "source"}]}, "owners": {"No owners": [{"node_id": "model.dbt_demo.my_first_dbt_model", "resource_type": "model"}, {"node_id": "model.dbt_demo.my_second_dbt_model", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.dim_dbt__current_models", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.dim_dbt__exposures", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.dim_dbt__models", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.dim_dbt__seeds", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.dim_dbt__snapshots", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.dim_dbt__sources", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.dim_dbt__tests", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.fct_dbt__invocations", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.fct_dbt__model_executions", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.fct_dbt__seed_executions", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.fct_dbt__snapshot_executions", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.fct_dbt__test_executions", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.exposures", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.invocations", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.models", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.model_executions", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.seeds", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.seed_executions", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.snapshots", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.snapshot_executions", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.sources", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.tests", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.test_executions", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.stg_dbt__exposures", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.stg_dbt__invocations", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.stg_dbt__models", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.stg_dbt__model_executions", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.stg_dbt__seeds", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.stg_dbt__seed_executions", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.stg_dbt__snapshots", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.stg_dbt__snapshot_executions", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.stg_dbt__sources", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.stg_dbt__tests", "resource_type": "model"}, {"node_id": "model.dbt_artifacts.stg_dbt__test_executions", "resource_type": "model"}, {"node_id": "model.dbt_demo.test_dbt_model", "resource_type": "model"}, {"node_id": "source.dbt_demo.test_source.seattle", "resource_type": "source"}]}}, "invocation": {"invocation_id": null, "detected_at": null, "command": null, "selected": null, "full_refresh": null, "job_url": null, "job_name": null, "job_id": null, "orchestrator": null}, "test_results": {"model.dbt_demo.my_second_dbt_model": [{"metadata": {"test_unique_id": "test.dbt_demo.not_null_my_second_dbt_model_id.151b76d778", "elementary_unique_id": "test.dbt_demo.not_null_my_second_dbt_model_id.151b76d778.id.generic", "database_name": "dbt_test", "schema_name": "seeds", "table_name": "my_second_dbt_model", "column_name": "id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models\\dbt_test\\example\\schema.yml", "latest_run_time": "2024-07-16T11:49:22+05:30", "latest_run_time_utc": "2024-07-16T06:19:22+00:00", "latest_run_status": "skipped", "model_unique_id": "model.dbt_demo.my_second_dbt_model", "table_unique_id": "dbt_test.seeds.my_second_dbt_model", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": null, "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_second_dbt_model')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": null}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_second_dbt_model')) }}"}}, "test_tags": [], "normalized_full_path": "dbt_demo/models\\dbt_test\\example\\schema.yml"}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.dbt_demo.unique_my_second_dbt_model_id.57a0f8c493", "elementary_unique_id": "test.dbt_demo.unique_my_second_dbt_model_id.57a0f8c493.id.generic", "database_name": "dbt_test", "schema_name": "seeds", "table_name": "my_second_dbt_model", "column_name": "id", "test_name": "unique", "test_display_name": "Unique", "original_path": "models\\dbt_test\\example\\schema.yml", "latest_run_time": "2024-07-16T11:49:22+05:30", "latest_run_time_utc": "2024-07-16T06:19:22+00:00", "latest_run_status": "skipped", "model_unique_id": "model.dbt_demo.my_second_dbt_model", "table_unique_id": "dbt_test.seeds.my_second_dbt_model", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": null, "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_second_dbt_model')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": null}, "configuration": {"test_name": "unique", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_second_dbt_model')) }}"}}, "test_tags": [], "normalized_full_path": "dbt_demo/models\\dbt_test\\example\\schema.yml"}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.dbt_demo.my_first_dbt_model": [{"metadata": {"test_unique_id": "test.dbt_demo.not_null_my_first_dbt_model_id.5fb22c2710", "elementary_unique_id": "test.dbt_demo.not_null_my_first_dbt_model_id.5fb22c2710.id.generic", "database_name": "dbt_test", "schema_name": "seeds", "table_name": "my_first_dbt_model", "column_name": "id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models\\dbt_test\\example\\schema.yml", "latest_run_time": "2024-07-16T11:49:22+05:30", "latest_run_time_utc": "2024-07-16T06:19:22+00:00", "latest_run_status": "fail", "model_unique_id": "model.dbt_demo.my_first_dbt_model", "table_unique_id": "dbt_test.seeds.my_first_dbt_model", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select id\nfrom dbt_test.seeds.my_first_dbt_model\nwhere id is null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_first_dbt_model')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": "Got 1 result, configured to fail if != 0", "result_query": "select id\nfrom dbt_test.seeds.my_first_dbt_model\nwhere id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_first_dbt_model')) }}"}}, "test_tags": [], "normalized_full_path": "dbt_demo/models\\dbt_test\\example\\schema.yml"}, "test_results": {"display_name": "not_null", "results_sample": [], "error_message": "Got 1 result, configured to fail if != 0", "failed_rows_count": 1}}, {"metadata": {"test_unique_id": "test.dbt_demo.unique_my_first_dbt_model_id.16e066b321", "elementary_unique_id": "test.dbt_demo.unique_my_first_dbt_model_id.16e066b321.id.generic", "database_name": "dbt_test", "schema_name": "seeds", "table_name": "my_first_dbt_model", "column_name": "id", "test_name": "unique", "test_display_name": "Unique", "original_path": "models\\dbt_test\\example\\schema.yml", "latest_run_time": "2024-07-16T11:49:22+05:30", "latest_run_time_utc": "2024-07-16T06:19:22+00:00", "latest_run_status": "pass", "model_unique_id": "model.dbt_demo.my_first_dbt_model", "table_unique_id": "dbt_test.seeds.my_first_dbt_model", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    id as unique_field,\n    count(*) as n_records\n\nfrom dbt_test.seeds.my_first_dbt_model\nwhere id is not null\ngroup by id\nhaving count(*) > 1", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_first_dbt_model')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    id as unique_field,\n    count(*) as n_records\n\nfrom dbt_test.seeds.my_first_dbt_model\nwhere id is not null\ngroup by id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_first_dbt_model')) }}"}}, "test_tags": [], "normalized_full_path": "dbt_demo/models\\dbt_test\\example\\schema.yml"}, "test_results": {"display_name": "unique", "results_sample": null, "error_message": null, "failed_rows_count": -1}}], "model.dbt_demo.test_dbt_model": [{"metadata": {"test_unique_id": "test.dbt_demo.is_aid_response_given_test_dbt_model_category.40d7e20e55", "elementary_unique_id": "test.dbt_demo.is_aid_response_given_test_dbt_model_category.40d7e20e55.category.generic", "database_name": "dbt_test", "schema_name": "staging", "table_name": "test_dbt_model", "column_name": "category", "test_name": "is_aid_response_given", "test_display_name": "Is Aid Response Given", "original_path": "models\\staging\\test_model\\test_dbt_model.yml", "latest_run_time": "2024-07-16T12:37:28+05:30", "latest_run_time_utc": "2024-07-16T07:07:28+00:00", "latest_run_status": "pass", "model_unique_id": "model.dbt_demo.test_dbt_model", "table_unique_id": "dbt_test.staging.test_dbt_model", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation as (\n\n    select\n        category as response_given\n\n    from DBT_TEST.seeds.seattle\n\n),\n\nvalidation_errors as (\n\n    select\n        response_given\n\n    from validation\n    -- if this is true, then even_field is actually odd!\n    where response_given = 'NA'\n\n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "category", "model": "{{ get_where_subquery(ref('test_dbt_model')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation as (\n\n    select\n        category as response_given\n\n    from DBT_TEST.seeds.seattle\n\n),\n\nvalidation_errors as (\n\n    select\n        response_given\n\n    from validation\n    -- if this is true, then even_field is actually odd!\n    where response_given = 'NA'\n\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "is_aid_response_given", "test_params": {"column_name": "category", "model": "{{ get_where_subquery(ref('test_dbt_model')) }}"}}, "test_tags": [], "normalized_full_path": "dbt_demo/models\\staging\\test_model\\test_dbt_model.yml"}, "test_results": {"display_name": "is_aid_response_given", "results_sample": null, "error_message": null, "failed_rows_count": -1}}, {"metadata": {"test_unique_id": "test.dbt_demo.not_null_test_dbt_model_address.266c9fabe1", "elementary_unique_id": "test.dbt_demo.not_null_test_dbt_model_address.266c9fabe1.address.generic", "database_name": "dbt_test", "schema_name": "staging", "table_name": "test_dbt_model", "column_name": "address", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models\\staging\\test_model\\test_dbt_model.yml", "latest_run_time": "2024-07-16T12:37:28+05:30", "latest_run_time_utc": "2024-07-16T07:07:28+00:00", "latest_run_status": "pass", "model_unique_id": "model.dbt_demo.test_dbt_model", "table_unique_id": "dbt_test.staging.test_dbt_model", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select address\nfrom dbt_test.staging.test_dbt_model\nwhere address is null", "test_params": {"column_name": "address", "model": "{{ get_where_subquery(ref('test_dbt_model')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select address\nfrom dbt_test.staging.test_dbt_model\nwhere address is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "address", "model": "{{ get_where_subquery(ref('test_dbt_model')) }}"}}, "test_tags": [], "normalized_full_path": "dbt_demo/models\\staging\\test_model\\test_dbt_model.yml"}, "test_results": {"display_name": "not_null", "results_sample": null, "error_message": null, "failed_rows_count": -1}}]}, "test_results_totals": {"model.dbt_demo.my_second_dbt_model": {"errors": 0, "warnings": 0, "passed": 0, "failures": 0}, "model.dbt_demo.my_first_dbt_model": {"errors": 0, "warnings": 0, "passed": 1, "failures": 1}, "model.dbt_demo.test_dbt_model": {"errors": 0, "warnings": 0, "passed": 2, "failures": 0}}, "test_runs": {"model.dbt_demo.my_second_dbt_model": [{"metadata": {"test_unique_id": "test.dbt_demo.not_null_my_second_dbt_model_id.151b76d778", "elementary_unique_id": "test.dbt_demo.not_null_my_second_dbt_model_id.151b76d778.id.generic", "database_name": "dbt_test", "schema_name": "seeds", "table_name": "my_second_dbt_model", "column_name": "id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models\\dbt_test\\example\\schema.yml", "latest_run_time": "2024-07-16T11:49:22+05:30", "latest_run_time_utc": "2024-07-16T06:19:22+00:00", "latest_run_status": "skipped", "model_unique_id": "model.dbt_demo.my_second_dbt_model", "table_unique_id": "dbt_test.seeds.my_second_dbt_model", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": null, "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_second_dbt_model')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": null}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_second_dbt_model')) }}"}}, "test_tags": [], "normalized_full_path": "dbt_demo/models\\dbt_test\\example\\schema.yml"}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 0, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-07-16T06:19:22+00:00", "id": "d73110f7-fdb4-4f84-809d-5ff08be091e1", "status": "skipped", "execution_time": null}], "description": "There were no failures, no errors and no warnings on the last 0 test runs."}, "median_exec_time": 0.0, "last_exec_time": null}, {"metadata": {"test_unique_id": "test.dbt_demo.unique_my_second_dbt_model_id.57a0f8c493", "elementary_unique_id": "test.dbt_demo.unique_my_second_dbt_model_id.57a0f8c493.id.generic", "database_name": "dbt_test", "schema_name": "seeds", "table_name": "my_second_dbt_model", "column_name": "id", "test_name": "unique", "test_display_name": "Unique", "original_path": "models\\dbt_test\\example\\schema.yml", "latest_run_time": "2024-07-16T11:49:22+05:30", "latest_run_time_utc": "2024-07-16T06:19:22+00:00", "latest_run_status": "skipped", "model_unique_id": "model.dbt_demo.my_second_dbt_model", "table_unique_id": "dbt_test.seeds.my_second_dbt_model", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": null, "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_second_dbt_model')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": null}, "configuration": {"test_name": "unique", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_second_dbt_model')) }}"}}, "test_tags": [], "normalized_full_path": "dbt_demo/models\\dbt_test\\example\\schema.yml"}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 0, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-07-16T06:19:22+00:00", "id": "d73110f7-fdb4-4f84-809d-5ff08be091e1", "status": "skipped", "execution_time": null}], "description": "There were no failures, no errors and no warnings on the last 0 test runs."}, "median_exec_time": 0.0, "last_exec_time": null}], "model.dbt_demo.my_first_dbt_model": [{"metadata": {"test_unique_id": "test.dbt_demo.not_null_my_first_dbt_model_id.5fb22c2710", "elementary_unique_id": "test.dbt_demo.not_null_my_first_dbt_model_id.5fb22c2710.id.generic", "database_name": "dbt_test", "schema_name": "seeds", "table_name": "my_first_dbt_model", "column_name": "id", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models\\dbt_test\\example\\schema.yml", "latest_run_time": "2024-07-16T11:49:22+05:30", "latest_run_time_utc": "2024-07-16T06:19:22+00:00", "latest_run_status": "fail", "model_unique_id": "model.dbt_demo.my_first_dbt_model", "table_unique_id": "dbt_test.seeds.my_first_dbt_model", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select id\nfrom dbt_test.seeds.my_first_dbt_model\nwhere id is null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_first_dbt_model')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": "Got 1 result, configured to fail if != 0", "result_query": "select id\nfrom dbt_test.seeds.my_first_dbt_model\nwhere id is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_first_dbt_model')) }}"}}, "test_tags": [], "normalized_full_path": "dbt_demo/models\\dbt_test\\example\\schema.yml"}, "test_runs": {"fail_rate": 1.0, "totals": {"errors": 0, "warnings": 0, "passed": 0, "failures": 1}, "invocations": [{"affected_rows": 1, "time_utc": "2024-07-16T06:19:22+00:00", "id": "d73110f7-fdb4-4f84-809d-5ff08be091e1", "status": "fail", "execution_time": null}], "description": "There were 1 failures, no errors and no warnings on the last 1 test runs."}, "median_exec_time": 0.0, "last_exec_time": null}, {"metadata": {"test_unique_id": "test.dbt_demo.unique_my_first_dbt_model_id.16e066b321", "elementary_unique_id": "test.dbt_demo.unique_my_first_dbt_model_id.16e066b321.id.generic", "database_name": "dbt_test", "schema_name": "seeds", "table_name": "my_first_dbt_model", "column_name": "id", "test_name": "unique", "test_display_name": "Unique", "original_path": "models\\dbt_test\\example\\schema.yml", "latest_run_time": "2024-07-16T11:49:22+05:30", "latest_run_time_utc": "2024-07-16T06:19:22+00:00", "latest_run_status": "pass", "model_unique_id": "model.dbt_demo.my_first_dbt_model", "table_unique_id": "dbt_test.seeds.my_first_dbt_model", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select\n    id as unique_field,\n    count(*) as n_records\n\nfrom dbt_test.seeds.my_first_dbt_model\nwhere id is not null\ngroup by id\nhaving count(*) > 1", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_first_dbt_model')) }}"}, "test_created_at": null, "description": "This test validates that there are no duplicate values present in a field.", "result": {"result_description": null, "result_query": "select\n    id as unique_field,\n    count(*) as n_records\n\nfrom dbt_test.seeds.my_first_dbt_model\nwhere id is not null\ngroup by id\nhaving count(*) > 1"}, "configuration": {"test_name": "unique", "test_params": {"column_name": "id", "model": "{{ get_where_subquery(ref('my_first_dbt_model')) }}"}}, "test_tags": [], "normalized_full_path": "dbt_demo/models\\dbt_test\\example\\schema.yml"}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-07-16T06:19:22+00:00", "id": "d73110f7-fdb4-4f84-809d-5ff08be091e1", "status": "pass", "execution_time": null}], "description": "There were no failures, no errors and no warnings on the last 1 test runs."}, "median_exec_time": 0.0, "last_exec_time": null}], "model.dbt_demo.test_dbt_model": [{"metadata": {"test_unique_id": "test.dbt_demo.is_aid_response_given_test_dbt_model_category.40d7e20e55", "elementary_unique_id": "test.dbt_demo.is_aid_response_given_test_dbt_model_category.40d7e20e55.category.generic", "database_name": "dbt_test", "schema_name": "staging", "table_name": "test_dbt_model", "column_name": "category", "test_name": "is_aid_response_given", "test_display_name": "Is Aid Response Given", "original_path": "models\\staging\\test_model\\test_dbt_model.yml", "latest_run_time": "2024-07-16T12:37:28+05:30", "latest_run_time_utc": "2024-07-16T07:07:28+00:00", "latest_run_status": "pass", "model_unique_id": "model.dbt_demo.test_dbt_model", "table_unique_id": "dbt_test.staging.test_dbt_model", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "with validation as (\n\n    select\n        category as response_given\n\n    from DBT_TEST.seeds.seattle\n\n),\n\nvalidation_errors as (\n\n    select\n        response_given\n\n    from validation\n    -- if this is true, then even_field is actually odd!\n    where response_given = 'NA'\n\n)\n\nselect *\nfrom validation_errors", "test_params": {"column_name": "category", "model": "{{ get_where_subquery(ref('test_dbt_model')) }}"}, "test_created_at": null, "description": null, "result": {"result_description": null, "result_query": "with validation as (\n\n    select\n        category as response_given\n\n    from DBT_TEST.seeds.seattle\n\n),\n\nvalidation_errors as (\n\n    select\n        response_given\n\n    from validation\n    -- if this is true, then even_field is actually odd!\n    where response_given = 'NA'\n\n)\n\nselect *\nfrom validation_errors"}, "configuration": {"test_name": "is_aid_response_given", "test_params": {"column_name": "category", "model": "{{ get_where_subquery(ref('test_dbt_model')) }}"}}, "test_tags": [], "normalized_full_path": "dbt_demo/models\\staging\\test_model\\test_dbt_model.yml"}, "test_runs": {"fail_rate": 0.5, "totals": {"errors": 0, "warnings": 0, "passed": 4, "failures": 4}, "invocations": [{"affected_rows": 7, "time_utc": "2024-07-16T06:40:52+00:00", "id": "90f80fa7-ce4d-4753-8275-c5a304913a8a", "status": "fail", "execution_time": null}, {"affected_rows": 126968, "time_utc": "2024-07-16T06:44:30+00:00", "id": "c82783cc-ccf3-4214-bc4b-643d779d4c4d", "status": "fail", "execution_time": null}, {"affected_rows": 1, "time_utc": "2024-07-16T06:46:01+00:00", "id": "7ac0fbf8-addb-4b02-9add-7fc9fcbbc1b2", "status": "fail", "execution_time": null}, {"affected_rows": 1, "time_utc": "2024-07-16T06:47:39+00:00", "id": "daa93ae0-3c28-49c6-a8ed-2af0c4e4f41c", "status": "fail", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-07-16T06:50:23+00:00", "id": "99497ceb-295f-4390-9188-64197cbb15ef", "status": "pass", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-07-16T07:00:01+00:00", "id": "6ae778b5-0688-4365-a3fa-fca415cabb7c", "status": "pass", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-07-16T07:05:09+00:00", "id": "c47c4e46-3db1-4159-9ae6-864e379d5d7a", "status": "pass", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-07-16T07:07:28+00:00", "id": "9d01892d-8bf4-4636-8b0b-d713b70f40a5", "status": "pass", "execution_time": null}], "description": "There were 4 failures, no errors and no warnings on the last 8 test runs."}, "median_exec_time": 0.0, "last_exec_time": null}, {"metadata": {"test_unique_id": "test.dbt_demo.not_null_test_dbt_model_address.266c9fabe1", "elementary_unique_id": "test.dbt_demo.not_null_test_dbt_model_address.266c9fabe1.address.generic", "database_name": "dbt_test", "schema_name": "staging", "table_name": "test_dbt_model", "column_name": "address", "test_name": "not_null", "test_display_name": "Not Null", "original_path": "models\\staging\\test_model\\test_dbt_model.yml", "latest_run_time": "2024-07-16T12:37:28+05:30", "latest_run_time_utc": "2024-07-16T07:07:28+00:00", "latest_run_status": "pass", "model_unique_id": "model.dbt_demo.test_dbt_model", "table_unique_id": "dbt_test.staging.test_dbt_model", "test_type": "dbt_test", "test_sub_type": "generic", "test_query": "select address\nfrom dbt_test.staging.test_dbt_model\nwhere address is null", "test_params": {"column_name": "address", "model": "{{ get_where_subquery(ref('test_dbt_model')) }}"}, "test_created_at": null, "description": "This test validates that there are no `null` values present in a column.", "result": {"result_description": null, "result_query": "select address\nfrom dbt_test.staging.test_dbt_model\nwhere address is null"}, "configuration": {"test_name": "not_null", "test_params": {"column_name": "address", "model": "{{ get_where_subquery(ref('test_dbt_model')) }}"}}, "test_tags": [], "normalized_full_path": "dbt_demo/models\\staging\\test_model\\test_dbt_model.yml"}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 11, "failures": 0}, "invocations": [{"affected_rows": null, "time_utc": "2024-07-16T06:17:52+00:00", "id": "41083302-bc18-4cbd-8dbc-7e796323c724", "status": "pass", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-07-16T06:18:43+00:00", "id": "acababe8-b8a4-4145-937b-aad77edb7fd3", "status": "pass", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-07-16T06:38:01+00:00", "id": "46a66f7b-f674-417e-91f2-674a64a244f5", "status": "pass", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-07-16T06:40:52+00:00", "id": "90f80fa7-ce4d-4753-8275-c5a304913a8a", "status": "pass", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-07-16T06:44:30+00:00", "id": "c82783cc-ccf3-4214-bc4b-643d779d4c4d", "status": "pass", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-07-16T06:46:01+00:00", "id": "7ac0fbf8-addb-4b02-9add-7fc9fcbbc1b2", "status": "pass", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-07-16T06:47:39+00:00", "id": "daa93ae0-3c28-49c6-a8ed-2af0c4e4f41c", "status": "pass", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-07-16T06:50:23+00:00", "id": "99497ceb-295f-4390-9188-64197cbb15ef", "status": "pass", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-07-16T07:00:01+00:00", "id": "6ae778b5-0688-4365-a3fa-fca415cabb7c", "status": "pass", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-07-16T07:05:09+00:00", "id": "c47c4e46-3db1-4159-9ae6-864e379d5d7a", "status": "pass", "execution_time": null}, {"affected_rows": null, "time_utc": "2024-07-16T07:07:28+00:00", "id": "9d01892d-8bf4-4636-8b0b-d713b70f40a5", "status": "pass", "execution_time": null}], "description": "There were no failures, no errors and no warnings on the last 11 test runs."}, "median_exec_time": 0.0, "last_exec_time": null}]}, "test_runs_totals": {"model.dbt_demo.my_second_dbt_model": {"errors": 0, "warnings": 0, "passed": 0, "failures": 0}, "model.dbt_demo.my_first_dbt_model": {"errors": 0, "warnings": 0, "passed": 1, "failures": 1}, "model.dbt_demo.test_dbt_model": {"errors": 0, "warnings": 0, "passed": 15, "failures": 4}}, "coverages": {"model.dbt_demo.my_first_dbt_model": {"table_tests": 0, "column_tests": 2}, "model.dbt_demo.my_second_dbt_model": {"table_tests": 0, "column_tests": 2}, "model.dbt_demo.test_dbt_model": {"table_tests": 0, "column_tests": 2}}, "model_runs": [{"unique_id": "model.dbt_artifacts.fct_dbt__model_executions", "schema": "dbt_logs", "name": "fct_dbt__model_executions", "status": "success", "last_exec_time": 1.9, "median_exec_time": 1.9, "compiled_code": "with base as (\n\n    select *\n    from pipeline_logs.dbt_logs.stg_dbt__model_executions\n\n),\n\nmodel_executions as (\n\n    select\n        model_execution_id,\n        command_invocation_id,\n        node_id,\n        run_started_at,\n        was_full_refresh,\n        thread_id,\n        status,\n        compile_started_at,\n        query_completed_at,\n        total_node_runtime,\n        rows_affected,\n        \n        materialization,\n        schema, -- noqa\n        name,\n        alias,\n        message\n    from base\n\n)\n\nselect * from model_executions", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.9}]}, {"unique_id": "model.dbt_artifacts.stg_dbt__seeds", "schema": "dbt_logs", "name": "stg_dbt__seeds", "status": "success", "last_exec_time": 2.3, "median_exec_time": 2.3, "compiled_code": "with base as (\n\n    select *\n    from pipeline_logs.dbt_logs.seeds\n\n),\n\nenhanced as (\n\n    select\n        \nmd5(cast(coalesce(cast(command_invocation_id as TEXT), '') || '-' || coalesce(cast(node_id as TEXT), '') as TEXT)) as seed_execution_id,\n        command_invocation_id,\n        node_id,\n        run_started_at,\n        database,\n        schema,\n        name,\n        package_name,\n        path,\n        checksum,\n        meta,\n        alias\n    from base\n\n)\n\nselect * from enhanced", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 2.3}]}, {"unique_id": "model.dbt_artifacts.tests", "schema": "dbt_logs", "name": "tests", "status": "success", "last_exec_time": 2.8, "median_exec_time": 2.8, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (\n    select 1 as foo\n)\n\nselect\n    cast(null as TEXT) as command_invocation_id,\n    cast(null as TEXT) as node_id,\n    cast(null as timestamp) as run_started_at,\n    cast(null as TEXT) as name,\n    cast(null as \n   array\n) as depends_on_nodes,\n    cast(null as TEXT) as package_name,\n    cast(null as TEXT) as test_path,\n    cast(null as \n   array\n) as tags,\n    cast(null as \n   object\n) as all_results\nfrom dummy_cte\nwhere 1 = 0", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "incremental", "execution_time": 2.8}]}, {"unique_id": "model.dbt_artifacts.dim_dbt__sources", "schema": "dbt_logs", "name": "dim_dbt__sources", "status": "success", "last_exec_time": 1.9, "median_exec_time": 1.9, "compiled_code": "with base as (\n\n    select *\n    from pipeline_logs.dbt_logs.stg_dbt__sources\n\n),\n\nsources as (\n\n    select\n        source_execution_id,\n        command_invocation_id,\n        node_id,\n        run_started_at,\n        database,\n        schema,\n        source_name,\n        loader,\n        name,\n        identifier,\n        loaded_at_field,\n        freshness\n    from base\n\n)\n\nselect * from sources", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.9}]}, {"unique_id": "model.dbt_artifacts.dim_dbt__exposures", "schema": "dbt_logs", "name": "dim_dbt__exposures", "status": "success", "last_exec_time": 1.8, "median_exec_time": 1.8, "compiled_code": "with base as (\n\n    select *\n    from pipeline_logs.dbt_logs.stg_dbt__exposures\n\n),\n\nexposures as (\n\n    select\n        exposure_execution_id,\n        command_invocation_id,\n        node_id,\n        run_started_at,\n        name,\n        type,\n        owner,\n        maturity,\n        path,\n        description,\n        url,\n        package_name,\n        depends_on_nodes,\n        tags\n    from base\n\n)\n\nselect * from exposures", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.8}]}, {"unique_id": "model.dbt_artifacts.stg_dbt__seed_executions", "schema": "dbt_logs", "name": "stg_dbt__seed_executions", "status": "success", "last_exec_time": 2.0, "median_exec_time": 2.0, "compiled_code": "with base as (\n\n    select *\n    from pipeline_logs.dbt_logs.seed_executions\n\n),\n\nenhanced as (\n\n    select\n        \nmd5(cast(coalesce(cast(command_invocation_id as TEXT), '') || '-' || coalesce(cast(node_id as TEXT), '') as TEXT)) as seed_execution_id,\n        command_invocation_id,\n        node_id,\n        run_started_at,\n        was_full_refresh,\n        \n\n    split_part(\n        thread_id,\n        '-',\n        2\n        )\n\n as thread_id,\n        status,\n        compile_started_at,\n        query_completed_at,\n        total_node_runtime,\n        rows_affected,\n        materialization,\n        schema, -- noqa\n        name,\n        alias,\n        message,\n        adapter_response\n    from base\n\n)\n\nselect * from enhanced", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 2.0}]}, {"unique_id": "model.dbt_artifacts.fct_dbt__test_executions", "schema": "dbt_logs", "name": "fct_dbt__test_executions", "status": "success", "last_exec_time": 1.9, "median_exec_time": 1.9, "compiled_code": "with base as (\n\n    select *\n    from pipeline_logs.dbt_logs.stg_dbt__test_executions\n\n),\n\ntest_executions as (\n\n    select\n        test_execution_id,\n        command_invocation_id,\n        node_id,\n        run_started_at,\n        was_full_refresh,\n        thread_id,\n        status,\n        compile_started_at,\n        query_completed_at,\n        total_node_runtime,\n        rows_affected,\n        failures,\n        message\n    from base\n\n)\n\nselect * from test_executions", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.9}]}, {"unique_id": "model.dbt_artifacts.dim_dbt__models", "schema": "dbt_logs", "name": "dim_dbt__models", "status": "success", "last_exec_time": 2.0, "median_exec_time": 2.0, "compiled_code": "with base as (\n\n    select *\n    from pipeline_logs.dbt_logs.stg_dbt__models\n\n),\n\nmodels as (\n\n    select\n        model_execution_id,\n        command_invocation_id,\n        node_id,\n        run_started_at,\n        database,\n        schema,\n        name,\n        depends_on_nodes,\n        package_name,\n        path,\n        checksum,\n        materialization,\n        tags,\n        meta,\n        alias\n    from base\n\n)\n\nselect * from models", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 2.0}]}, {"unique_id": "model.dbt_artifacts.fct_dbt__snapshot_executions", "schema": "dbt_logs", "name": "fct_dbt__snapshot_executions", "status": "success", "last_exec_time": 2.0, "median_exec_time": 2.0, "compiled_code": "with base as (\n\n    select *\n    from pipeline_logs.dbt_logs.stg_dbt__snapshot_executions\n\n),\n\nsnapshot_executions as (\n\n    select\n        snapshot_execution_id,\n        command_invocation_id,\n        node_id,\n        run_started_at,\n        was_full_refresh,\n        thread_id,\n        status,\n        compile_started_at,\n        query_completed_at,\n        total_node_runtime,\n        rows_affected,\n        materialization,\n        schema,\n        name,\n        alias,\n        message\n    from base\n\n)\n\nselect * from snapshot_executions", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 2.0}]}, {"unique_id": "model.dbt_artifacts.models", "schema": "dbt_logs", "name": "models", "status": "success", "last_exec_time": 3.1, "median_exec_time": 3.1, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (\n    select 1 as foo\n)\n\nselect\n    cast(null as TEXT) as command_invocation_id,\n    cast(null as TEXT) as node_id,\n    cast(null as timestamp) as run_started_at,\n    cast(null as TEXT) as database,\n    cast(null as TEXT) as schema,\n    cast(null as TEXT) as name,\n    cast(null as \n   array\n) as depends_on_nodes,\n    cast(null as TEXT) as package_name,\n    cast(null as TEXT) as path,\n    cast(null as TEXT) as checksum,\n    cast(null as TEXT) as materialization,\n    cast(null as \n   array\n) as tags,\n    cast(null as \n   object\n) as meta,\n    cast(null as TEXT) as alias,\n    cast(null as \n   object\n) as all_results\nfrom dummy_cte\nwhere 1 = 0", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "incremental", "execution_time": 3.1}]}, {"unique_id": "model.dbt_artifacts.fct_dbt__invocations", "schema": "dbt_logs", "name": "fct_dbt__invocations", "status": "success", "last_exec_time": 1.9, "median_exec_time": 1.9, "compiled_code": "with base as (\n\n    select *\n    from pipeline_logs.dbt_logs.stg_dbt__invocations\n\n),\n\ninvocations as (\n\n    select\n        command_invocation_id,\n        dbt_version,\n        project_name,\n        run_started_at,\n        dbt_command,\n        full_refresh_flag,\n        target_profile_name,\n        target_name,\n        target_schema,\n        target_threads,\n        dbt_cloud_project_id,\n        dbt_cloud_job_id,\n        dbt_cloud_run_id,\n        dbt_cloud_run_reason_category,\n        dbt_cloud_run_reason,\n        env_vars,\n        dbt_vars,\n        invocation_args,\n        dbt_custom_envs\n    from base\n\n)\n\nselect * from invocations", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.9}]}, {"unique_id": "model.dbt_artifacts.dim_dbt__current_models", "schema": "dbt_logs", "name": "dim_dbt__current_models", "status": "success", "last_exec_time": 1.9, "median_exec_time": 1.9, "compiled_code": "with base as (\n    select *\n    from pipeline_logs.dbt_logs.stg_dbt__models\n),\n\nmodel_executions as (\n    select *\n    from pipeline_logs.dbt_logs.stg_dbt__model_executions\n),\n\nlatest_models as (\n    /* Retrieves the models present in the most recent run */\n    select *\n    from base\n    where run_started_at = (select max(run_started_at) from base)\n),\n\nlatest_models_runs as (\n    /* Retreives all successful run information for the models present in the most\n    recent run and ranks them based on query completion time */\n    select\n        model_executions.node_id\n        , model_executions.was_full_refresh\n        , model_executions.query_completed_at\n        , model_executions.total_node_runtime\n        , model_executions.rows_affected\n        \n        /* Row number by refresh and node ID */\n        , row_number() over (\n            partition by latest_models.node_id, model_executions.was_full_refresh\n            order by model_executions.query_completed_at desc /* most recent ranked first */\n        ) as run_idx\n        /* Row number by node ID */\n        , row_number() over (\n            partition by latest_models.node_id\n            order by model_executions.query_completed_at desc /* most recent ranked first */\n        ) as run_idx_id_only\n    from model_executions\n    inner join latest_models on model_executions.node_id = latest_models.node_id\n    where model_executions.status = 'success'\n),\n\nlatest_model_stats as (\n    select\n        node_id\n        , max(case when was_full_refresh then query_completed_at end) as last_full_refresh_run_completed_at\n        , max(case when was_full_refresh then total_node_runtime end) as last_full_refresh_run_total_runtime\n        , max(case when was_full_refresh then rows_affected end) as last_full_refresh_run_rows_affected\n        \n        , max(case when run_idx_id_only = 1 then query_completed_at end) as last_run_completed_at\n        , max(case when run_idx_id_only = 1 then total_node_runtime end) as last_run_total_runtime\n        , max(case when run_idx_id_only = 1 then rows_affected end) as last_run_rows_affected\n        \n        , max(case when not was_full_refresh then query_completed_at end) as last_incremental_run_completed_at\n        , max(case when not was_full_refresh then total_node_runtime end) as last_incremental_run_total_runtime\n        , max(case when not was_full_refresh then rows_affected end) as last_incremental_run_rows_affected\n        \n    from latest_models_runs\n    where run_idx = 1\n    group by 1\n),\n\nfinal as (\n    select\n        latest_models.*\n        , latest_model_stats.last_full_refresh_run_completed_at\n        , latest_model_stats.last_full_refresh_run_total_runtime\n        , latest_model_stats.last_full_refresh_run_rows_affected\n        \n        , latest_model_stats.last_run_completed_at\n        , latest_model_stats.last_run_total_runtime\n        , latest_model_stats.last_run_rows_affected\n        \n        , latest_model_stats.last_incremental_run_completed_at\n        , latest_model_stats.last_incremental_run_total_runtime\n        , latest_model_stats.last_incremental_run_rows_affected\n        \n    from latest_models\n    left join latest_model_stats\n        on latest_models.node_id = latest_model_stats.node_id\n)\n\nselect * from final", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.9}]}, {"unique_id": "model.dbt_artifacts.dim_dbt__snapshots", "schema": "dbt_logs", "name": "dim_dbt__snapshots", "status": "success", "last_exec_time": 1.8, "median_exec_time": 1.8, "compiled_code": "with base as (\n\n    select *\n    from pipeline_logs.dbt_logs.stg_dbt__snapshots\n\n),\n\nsnapshots as (\n\n    select\n        snapshot_execution_id,\n        command_invocation_id,\n        node_id,\n        run_started_at,\n        database,\n        schema,\n        name,\n        depends_on_nodes,\n        package_name,\n        path,\n        checksum,\n        strategy,\n        meta,\n        alias\n    from base\n\n)\n\nselect * from snapshots", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.8}]}, {"unique_id": "model.dbt_artifacts.dim_dbt__seeds", "schema": "dbt_logs", "name": "dim_dbt__seeds", "status": "success", "last_exec_time": 1.3, "median_exec_time": 1.3, "compiled_code": "with base as (\n\n    select *\n    from pipeline_logs.dbt_logs.stg_dbt__seeds\n\n),\n\nseeds as (\n\n    select\n        seed_execution_id,\n        command_invocation_id,\n        node_id,\n        run_started_at,\n        database,\n        schema,\n        name,\n        package_name,\n        path,\n        checksum,\n        meta,\n        alias\n    from base\n\n)\n\nselect * from seeds", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.3}]}, {"unique_id": "model.dbt_artifacts.fct_dbt__seed_executions", "schema": "dbt_logs", "name": "fct_dbt__seed_executions", "status": "success", "last_exec_time": 1.3, "median_exec_time": 1.3, "compiled_code": "with base as (\n\n    select *\n    from pipeline_logs.dbt_logs.stg_dbt__seed_executions\n\n),\n\nseed_executions as (\n\n    select\n        seed_execution_id,\n        command_invocation_id,\n        node_id,\n        run_started_at,\n        was_full_refresh,\n        thread_id,\n        status,\n        compile_started_at,\n        query_completed_at,\n        total_node_runtime,\n        rows_affected,\n        materialization,\n        schema,\n        name,\n        alias,\n        message\n    from base\n\n)\n\nselect * from seed_executions", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.3}]}, {"unique_id": "model.dbt_artifacts.stg_dbt__tests", "schema": "dbt_logs", "name": "stg_dbt__tests", "status": "success", "last_exec_time": 1.3, "median_exec_time": 1.3, "compiled_code": "with base as (\n\n    select *\n    from pipeline_logs.dbt_logs.tests\n\n),\n\nenhanced as (\n\n    select\n        \nmd5(cast(coalesce(cast(command_invocation_id as TEXT), '') || '-' || coalesce(cast(node_id as TEXT), '') as TEXT)) as test_execution_id,\n        command_invocation_id,\n        node_id,\n        run_started_at,\n        name,\n        depends_on_nodes,\n        package_name,\n        test_path,\n        tags\n    from base\n\n)\n\nselect * from enhanced", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.3}]}, {"unique_id": "model.dbt_artifacts.dim_dbt__tests", "schema": "dbt_logs", "name": "dim_dbt__tests", "status": "success", "last_exec_time": 1.2, "median_exec_time": 1.2, "compiled_code": "with base as (\n\n    select *\n    from pipeline_logs.dbt_logs.stg_dbt__tests\n\n),\n\ntests as (\n\n    select\n        test_execution_id,\n        command_invocation_id,\n        node_id,\n        run_started_at,\n        name,\n        depends_on_nodes,\n        package_name,\n        test_path,\n        tags\n    from base\n\n)\n\nselect * from tests", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.2}]}, {"unique_id": "model.dbt_artifacts.stg_dbt__invocations", "schema": "dbt_logs", "name": "stg_dbt__invocations", "status": "success", "last_exec_time": 2.2, "median_exec_time": 2.2, "compiled_code": "with base as (\n\n    select *\n    from pipeline_logs.dbt_logs.invocations\n\n),\n\nenhanced as (\n\n    select\n        command_invocation_id,\n        dbt_version,\n        project_name,\n        run_started_at,\n        dbt_command,\n        full_refresh_flag,\n        target_profile_name,\n        target_name,\n        target_schema,\n        target_threads,\n        dbt_cloud_project_id,\n        dbt_cloud_job_id,\n        dbt_cloud_run_id,\n        dbt_cloud_run_reason_category,\n        dbt_cloud_run_reason,\n        env_vars,\n        dbt_vars,\n        invocation_args,\n        dbt_custom_envs\n    from base\n\n)\n\nselect * from enhanced", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 2.2}]}, {"unique_id": "model.dbt_artifacts.test_executions", "schema": "dbt_logs", "name": "test_executions", "status": "success", "last_exec_time": 3.1, "median_exec_time": 3.1, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (\n    select 1 as foo\n)\n\nselect\n    cast(null as TEXT) as command_invocation_id,\n    cast(null as TEXT) as node_id,\n    cast(null as timestamp) as run_started_at,\n    cast(null as boolean) as was_full_refresh,\n    cast(null as TEXT) as thread_id,\n    cast(null as TEXT) as status,\n    cast(null as timestamp) as compile_started_at,\n    cast(null as timestamp) as query_completed_at,\n    cast(null as float) as total_node_runtime,\n    cast(null as integer) as rows_affected,\n    cast(null as integer) as failures,\n    cast(null as TEXT) as message,\n    cast(null as \n   object\n) as adapter_response\nfrom dummy_cte\nwhere 1 = 0", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "incremental", "execution_time": 3.1}]}, {"unique_id": "model.dbt_artifacts.sources", "schema": "dbt_logs", "name": "sources", "status": "success", "last_exec_time": 3.1, "median_exec_time": 3.1, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (\n    select 1 as foo\n)\n\nselect\n    cast(null as TEXT) as command_invocation_id,\n    cast(null as TEXT) as node_id,\n    cast(null as timestamp) as run_started_at,\n    cast(null as TEXT) as database,\n    cast(null as TEXT) as schema,\n    cast(null as TEXT) as source_name,\n    cast(null as TEXT) as loader,\n    cast(null as TEXT) as name,\n    cast(null as TEXT) as identifier,\n    cast(null as TEXT) as loaded_at_field,\n    \n        cast(null as \n   array\n) as freshness,\n    \n    cast(null as \n   object\n) as all_results\nfrom dummy_cte\nwhere 1 = 0", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "incremental", "execution_time": 3.1}]}, {"unique_id": "model.dbt_artifacts.snapshot_executions", "schema": "dbt_logs", "name": "snapshot_executions", "status": "success", "last_exec_time": 3.1, "median_exec_time": 3.1, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (\n    select 1 as foo\n)\n\nselect\n    cast(null as TEXT) as command_invocation_id,\n    cast(null as TEXT) as node_id,\n    cast(null as timestamp) as run_started_at,\n    cast(null as boolean) as was_full_refresh,\n    cast(null as TEXT) as thread_id,\n    cast(null as TEXT) as status,\n    cast(null as timestamp) as compile_started_at,\n    cast(null as timestamp) as query_completed_at,\n    cast(null as float) as total_node_runtime,\n    cast(null as integer) as rows_affected,\n    cast(null as TEXT) as materialization,\n    cast(null as TEXT) as schema,\n    cast(null as TEXT) as name,\n    cast(null as TEXT) as alias,\n    cast(null as TEXT) as message,\n    cast(null as \n   object\n) as adapter_response\nfrom dummy_cte\nwhere 1 = 0", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "incremental", "execution_time": 3.1}]}, {"unique_id": "model.dbt_artifacts.model_executions", "schema": "dbt_logs", "name": "model_executions", "status": "success", "last_exec_time": 3.2, "median_exec_time": 3.2, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (\n    select 1 as foo\n)\n\nselect\n    cast(null as TEXT) as command_invocation_id,\n    cast(null as TEXT) as node_id,\n    cast(null as timestamp) as run_started_at,\n    cast(null as boolean) as was_full_refresh,\n    cast(null as TEXT) as thread_id,\n    cast(null as TEXT) as status,\n    cast(null as timestamp) as compile_started_at,\n    cast(null as timestamp) as query_completed_at,\n    cast(null as float) as total_node_runtime,\n    cast(null as integer) as rows_affected,\n    \n    cast(null as TEXT) as materialization,\n    cast(null as TEXT) as schema,\n    cast(null as TEXT) as name,\n    cast(null as TEXT) as alias,\n    cast(null as TEXT) as message,\n    cast(null as \n   object\n) as adapter_response\nfrom dummy_cte\nwhere 1 = 0", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "incremental", "execution_time": 3.2}]}, {"unique_id": "model.dbt_artifacts.exposures", "schema": "dbt_logs", "name": "exposures", "status": "success", "last_exec_time": 3.4, "median_exec_time": 3.4, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (\n    select 1 as foo\n)\n\nselect\n    cast(null as TEXT) as command_invocation_id,\n    cast(null as TEXT) as node_id,\n    cast(null as timestamp) as run_started_at,\n    cast(null as TEXT) as name,\n    cast(null as TEXT) as type,\n    cast(null as \n   object\n) as owner,\n    cast(null as TEXT) as maturity,\n    cast(null as TEXT) as path,\n    cast(null as TEXT) as description,\n    cast(null as TEXT) as url,\n    cast(null as TEXT) as package_name,\n    cast(null as \n   array\n) as depends_on_nodes,\n    cast(null as \n   array\n) as tags,\n    cast(null as \n   object\n) as all_results\nfrom dummy_cte\nwhere 1 = 0", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "incremental", "execution_time": 3.4}]}, {"unique_id": "model.dbt_artifacts.seeds", "schema": "dbt_logs", "name": "seeds", "status": "success", "last_exec_time": 3.4, "median_exec_time": 3.4, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (\n    select 1 as foo\n)\n\nselect\n    cast(null as TEXT) as command_invocation_id,\n    cast(null as TEXT) as node_id,\n    cast(null as timestamp) as run_started_at,\n    cast(null as TEXT) as database,\n    cast(null as TEXT) as schema,\n    cast(null as TEXT) as name,\n    cast(null as TEXT) as package_name,\n    cast(null as TEXT) as path,\n    cast(null as TEXT) as checksum,\n    cast(null as \n   object\n) as meta,\n    cast(null as TEXT) as alias,\n    cast(null as \n   object\n) as all_results\nfrom dummy_cte\nwhere 1 = 0", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "incremental", "execution_time": 3.4}]}, {"unique_id": "model.dbt_artifacts.invocations", "schema": "dbt_logs", "name": "invocations", "status": "success", "last_exec_time": 3.5, "median_exec_time": 3.5, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (\n    select 1 as foo\n)\n\nselect\n    cast(null as TEXT) as command_invocation_id,\n    cast(null as TEXT) as dbt_version,\n    cast(null as TEXT) as project_name,\n    cast(null as timestamp) as run_started_at,\n    cast(null as TEXT) as dbt_command,\n    cast(null as boolean) as full_refresh_flag,\n    cast(null as TEXT) as target_profile_name,\n    cast(null as TEXT) as target_name,\n    cast(null as TEXT) as target_schema,\n    cast(null as integer) as target_threads,\n    cast(null as TEXT) as dbt_cloud_project_id,\n    cast(null as TEXT) as dbt_cloud_job_id,\n    cast(null as TEXT) as dbt_cloud_run_id,\n    cast(null as TEXT) as dbt_cloud_run_reason_category,\n    cast(null as TEXT) as dbt_cloud_run_reason,\n    cast(null as \n   object\n) as env_vars,\n    cast(null as \n   object\n) as dbt_vars,\n    cast(null as \n   object\n) as invocation_args,\n    cast(null as \n   object\n) as dbt_custom_envs\nfrom dummy_cte\nwhere 1 = 0", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "incremental", "execution_time": 3.5}]}, {"unique_id": "model.dbt_artifacts.snapshots", "schema": "dbt_logs", "name": "snapshots", "status": "success", "last_exec_time": 3.5, "median_exec_time": 3.5, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (\n    select 1 as foo\n)\n\nselect\n    cast(null as TEXT) as command_invocation_id,\n    cast(null as TEXT) as node_id,\n    cast(null as timestamp) as run_started_at,\n    cast(null as TEXT) as database,\n    cast(null as TEXT) as schema,\n    cast(null as TEXT) as name,\n    cast(null as \n   array\n) as depends_on_nodes,\n    cast(null as TEXT) as package_name,\n    cast(null as TEXT) as path,\n    cast(null as TEXT) as checksum,\n    cast(null as TEXT) as strategy,\n    cast(null as \n   object\n) as meta,\n    cast(null as TEXT) as alias,\n    cast(null as \n   object\n) as all_results\nfrom dummy_cte\nwhere 1 = 0", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "incremental", "execution_time": 3.5}]}, {"unique_id": "model.dbt_artifacts.seed_executions", "schema": "dbt_logs", "name": "seed_executions", "status": "success", "last_exec_time": 3.5, "median_exec_time": 3.5, "compiled_code": "/* Bigquery won't let us `where` without `from` so we use this workaround */\nwith dummy_cte as (\n    select 1 as foo\n)\n\nselect\n    cast(null as TEXT) as command_invocation_id,\n    cast(null as TEXT) as node_id,\n    cast(null as timestamp) as run_started_at,\n    cast(null as boolean) as was_full_refresh,\n    cast(null as TEXT) as thread_id,\n    cast(null as TEXT) as status,\n    cast(null as timestamp) as compile_started_at,\n    cast(null as timestamp) as query_completed_at,\n    cast(null as float) as total_node_runtime,\n    cast(null as integer) as rows_affected,\n    cast(null as TEXT) as materialization,\n    cast(null as TEXT) as schema,\n    cast(null as TEXT) as name,\n    cast(null as TEXT) as alias,\n    cast(null as TEXT) as message,\n    cast(null as \n   object\n) as adapter_response\nfrom dummy_cte\nwhere 1 = 0", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "incremental", "execution_time": 3.5}]}, {"unique_id": "model.dbt_artifacts.stg_dbt__models", "schema": "dbt_logs", "name": "stg_dbt__models", "status": "success", "last_exec_time": 2.0, "median_exec_time": 2.0, "compiled_code": "with base as (\n\n    select *\n    from pipeline_logs.dbt_logs.models\n\n),\n\nenhanced as (\n\n    select\n        \nmd5(cast(coalesce(cast(command_invocation_id as TEXT), '') || '-' || coalesce(cast(node_id as TEXT), '') as TEXT)) as model_execution_id,\n        command_invocation_id,\n        node_id,\n        run_started_at,\n        database,\n        schema,\n        name,\n        depends_on_nodes,\n        package_name,\n        path,\n        checksum,\n        materialization,\n        tags,\n        meta,\n        alias\n    from base\n\n)\n\nselect * from enhanced", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 2.0}]}, {"unique_id": "model.dbt_artifacts.stg_dbt__sources", "schema": "dbt_logs", "name": "stg_dbt__sources", "status": "success", "last_exec_time": 2.0, "median_exec_time": 2.0, "compiled_code": "with base as (\n\n    select *\n    from pipeline_logs.dbt_logs.sources\n\n),\n\nenhanced as (\n\n    select\n        \nmd5(cast(coalesce(cast(command_invocation_id as TEXT), '') || '-' || coalesce(cast(node_id as TEXT), '') as TEXT)) as source_execution_id,\n        command_invocation_id,\n        node_id,\n        run_started_at,\n        database,\n        schema,\n        source_name,\n        loader,\n        name,\n        identifier,\n        loaded_at_field,\n        freshness\n    from base\n\n)\n\nselect * from enhanced", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 2.0}]}, {"unique_id": "model.dbt_artifacts.stg_dbt__snapshot_executions", "schema": "dbt_logs", "name": "stg_dbt__snapshot_executions", "status": "success", "last_exec_time": 1.9, "median_exec_time": 1.9, "compiled_code": "with base as (\n\n    select *\n    from pipeline_logs.dbt_logs.snapshot_executions\n\n),\n\nenhanced as (\n\n    select\n        \nmd5(cast(coalesce(cast(command_invocation_id as TEXT), '') || '-' || coalesce(cast(node_id as TEXT), '') as TEXT)) as snapshot_execution_id,\n        command_invocation_id,\n        node_id,\n        run_started_at,\n        was_full_refresh,\n        \n\n    split_part(\n        thread_id,\n        '-',\n        2\n        )\n\n as thread_id,\n        status,\n        compile_started_at,\n        query_completed_at,\n        total_node_runtime,\n        rows_affected,\n        materialization,\n        schema, -- noqa\n        name,\n        alias,\n        message,\n        adapter_response\n    from base\n\n)\n\nselect * from enhanced", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.9}]}, {"unique_id": "model.dbt_artifacts.stg_dbt__test_executions", "schema": "dbt_logs", "name": "stg_dbt__test_executions", "status": "success", "last_exec_time": 2.1, "median_exec_time": 2.1, "compiled_code": "with base as (\n\n    select *\n    from pipeline_logs.dbt_logs.test_executions\n\n),\n\nenhanced as (\n\n    select\n        \nmd5(cast(coalesce(cast(command_invocation_id as TEXT), '') || '-' || coalesce(cast(node_id as TEXT), '') as TEXT)) as test_execution_id,\n        command_invocation_id,\n        node_id,\n        run_started_at,\n        was_full_refresh,\n        \n\n    split_part(\n        thread_id,\n        '-',\n        2\n        )\n\n as thread_id,\n        status,\n        compile_started_at,\n        query_completed_at,\n        total_node_runtime,\n        rows_affected,\n        failures,\n        message\n    from base\n\n)\n\nselect * from enhanced", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 2.1}]}, {"unique_id": "model.dbt_artifacts.stg_dbt__exposures", "schema": "dbt_logs", "name": "stg_dbt__exposures", "status": "success", "last_exec_time": 1.8, "median_exec_time": 1.8, "compiled_code": "with base as (\n\n    select *\n    from pipeline_logs.dbt_logs.exposures\n\n),\n\nenhanced as (\n\n    select\n        \nmd5(cast(coalesce(cast(command_invocation_id as TEXT), '') || '-' || coalesce(cast(node_id as TEXT), '') as TEXT)) as exposure_execution_id,\n        command_invocation_id,\n        node_id,\n        run_started_at,\n        name,\n        type,\n        owner,\n        maturity,\n        path,\n        description,\n        url,\n        package_name,\n        depends_on_nodes,\n        tags\n    from base\n\n)\n\nselect * from enhanced", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.8}]}, {"unique_id": "model.dbt_artifacts.stg_dbt__model_executions", "schema": "dbt_logs", "name": "stg_dbt__model_executions", "status": "success", "last_exec_time": 1.9, "median_exec_time": 1.9, "compiled_code": "with base as (\n\n    select *\n    from pipeline_logs.dbt_logs.model_executions\n\n),\n\nenhanced as (\n\n    select\n        \nmd5(cast(coalesce(cast(command_invocation_id as TEXT), '') || '-' || coalesce(cast(node_id as TEXT), '') as TEXT)) as model_execution_id,\n        command_invocation_id,\n        node_id,\n        run_started_at,\n        was_full_refresh,\n        \n\n    split_part(\n        thread_id,\n        '-',\n        2\n        )\n\n as thread_id,\n        status,\n        compile_started_at,\n        query_completed_at,\n        total_node_runtime,\n        rows_affected,\n        \n        materialization,\n        schema, -- noqa\n        name,\n        alias,\n        message,\n        adapter_response\n    from base\n\n)\n\nselect * from enhanced", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 1.9}]}, {"unique_id": "model.dbt_artifacts.stg_dbt__snapshots", "schema": "dbt_logs", "name": "stg_dbt__snapshots", "status": "success", "last_exec_time": 2.2, "median_exec_time": 2.2, "compiled_code": "with base as (\n\n    select *\n    from pipeline_logs.dbt_logs.snapshots\n\n),\n\nenhanced as (\n\n    select\n        \nmd5(cast(coalesce(cast(command_invocation_id as TEXT), '') || '-' || coalesce(cast(node_id as TEXT), '') as TEXT)) as snapshot_execution_id,\n        command_invocation_id,\n        node_id,\n        run_started_at,\n        database,\n        schema,\n        name,\n        depends_on_nodes,\n        package_name,\n        path,\n        checksum,\n        strategy,\n        meta,\n        alias\n    from base\n\n)\n\nselect * from enhanced", "last_generated_at": "2024-07-16T06:17:25+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "time_utc": "2024-07-16T06:17:25+00:00", "status": "success", "full_refresh": false, "materialization": "view", "execution_time": 2.2}]}, {"unique_id": "model.dbt_demo.test_dbt_model", "schema": "staging", "name": "test_dbt_model", "status": "success", "last_exec_time": 2.0, "median_exec_time": 1.9, "compiled_code": "with\n\nsource_data as (\n\n    select * from DBT_TEST.seeds.seattle\n\n),\n\nfinal as (\n    select *\n    , current_timestamp() as batch_time\n    from source_data limit 10\n)\n\nselect * from final", "last_generated_at": "2024-07-16T07:07:27+00:00", "exec_time_change_rate": 5.263157894736836, "totals": {"errors": 0, "success": 5}, "runs": [{"id": "41083302-bc18-4cbd-8dbc-7e796323c724", "time_utc": "2024-07-16T06:17:52+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 1.7}, {"id": "acababe8-b8a4-4145-937b-aad77edb7fd3", "time_utc": "2024-07-16T06:18:42+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 1.9}, {"id": "6ae778b5-0688-4365-a3fa-fca415cabb7c", "time_utc": "2024-07-16T07:00:00+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 2.0}, {"id": "c47c4e46-3db1-4159-9ae6-864e379d5d7a", "time_utc": "2024-07-16T07:05:08+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 1.8}, {"id": "9d01892d-8bf4-4636-8b0b-d713b70f40a5", "time_utc": "2024-07-16T07:07:27+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 2.0}]}, {"unique_id": "model.dbt_demo.my_first_dbt_model", "schema": "seeds", "name": "my_first_dbt_model", "status": "success", "last_exec_time": 2.0, "median_exec_time": 2.0, "compiled_code": "/*\n    Welcome to your first dbt model!\n    Did you know that you can also configure models directly within SQL files?\n    This will override configurations stated in dbt_project.yml\n\n    Try changing \"table\" to \"view\" below\n*/\n\n\n\nwith source_data as (\n\n    select 1 as id\n    union all\n    select null as id\n\n)\n\nselect *\nfrom source_data\n\n/*\n    Uncomment the line below to remove records with null `id` values\n*/\n\n--where id is not null", "last_generated_at": "2024-07-16T06:19:21+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 1}, "runs": [{"id": "d73110f7-fdb4-4f84-809d-5ff08be091e1", "time_utc": "2024-07-16T06:19:21+00:00", "status": "success", "full_refresh": false, "materialization": "table", "execution_time": 2.0}]}, {"unique_id": "model.dbt_demo.my_second_dbt_model", "schema": "seeds", "name": "my_second_dbt_model", "status": "skipped", "last_exec_time": 0.0, "median_exec_time": 0.0, "compiled_code": null, "last_generated_at": "2024-07-16T06:19:21+00:00", "exec_time_change_rate": 0.0, "totals": {"errors": 0, "success": 0}, "runs": [{"id": "d73110f7-fdb4-4f84-809d-5ff08be091e1", "time_utc": "2024-07-16T06:19:21+00:00", "status": "skipped", "full_refresh": false, "materialization": "view", "execution_time": 0.0}]}], "model_runs_totals": {"model.dbt_artifacts.fct_dbt__model_executions": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.stg_dbt__seeds": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.tests": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.dim_dbt__sources": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.dim_dbt__exposures": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.stg_dbt__seed_executions": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.fct_dbt__test_executions": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.dim_dbt__models": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.fct_dbt__snapshot_executions": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.models": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.fct_dbt__invocations": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.dim_dbt__current_models": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.dim_dbt__snapshots": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.dim_dbt__seeds": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.fct_dbt__seed_executions": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.stg_dbt__tests": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.dim_dbt__tests": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.stg_dbt__invocations": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.test_executions": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.sources": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.snapshot_executions": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.model_executions": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.exposures": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.seeds": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.invocations": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.snapshots": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.seed_executions": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.stg_dbt__models": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.stg_dbt__sources": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.stg_dbt__snapshot_executions": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.stg_dbt__test_executions": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.stg_dbt__exposures": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.stg_dbt__model_executions": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_artifacts.stg_dbt__snapshots": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_demo.test_dbt_model": {"errors": 0, "warnings": 0, "passed": 5, "failures": 0}, "model.dbt_demo.my_first_dbt_model": {"errors": 0, "warnings": 0, "passed": 1, "failures": 0}, "model.dbt_demo.my_second_dbt_model": {"errors": 0, "warnings": 0, "passed": 0, "failures": 0}}, "filters": {"test_results": [{"name": "failures", "display_name": "Failures", "model_unique_ids": ["model.dbt_demo.my_first_dbt_model"]}, {"name": "passed", "display_name": "Passed", "model_unique_ids": ["model.dbt_demo.my_first_dbt_model", "model.dbt_demo.test_dbt_model"]}, {"name": "no_test", "display_name": "No Tests", "model_unique_ids": ["model.dbt_artifacts.dim_dbt__sources", "model.dbt_artifacts.exposures", "model.dbt_artifacts.tests", "model.dbt_artifacts.stg_dbt__snapshots", "model.dbt_artifacts.seed_executions", "model.dbt_artifacts.dim_dbt__snapshots", "source.dbt_demo.test_source.seattle", "model.dbt_artifacts.model_executions", "model.dbt_artifacts.seeds", "model.dbt_artifacts.stg_dbt__sources", "model.dbt_artifacts.stg_dbt__model_executions", "model.dbt_artifacts.fct_dbt__test_executions", "model.dbt_artifacts.invocations", "model.dbt_artifacts.stg_dbt__seed_executions", "model.dbt_artifacts.stg_dbt__snapshot_executions", "model.dbt_artifacts.dim_dbt__tests", "model.dbt_artifacts.snapshot_executions", "model.dbt_artifacts.dim_dbt__exposures", "model.dbt_artifacts.stg_dbt__tests", "model.dbt_artifacts.dim_dbt__current_models", "model.dbt_artifacts.stg_dbt__test_executions", "model.dbt_demo.my_second_dbt_model", "model.dbt_artifacts.sources", "model.dbt_artifacts.stg_dbt__models", "model.dbt_artifacts.dim_dbt__seeds", "model.dbt_artifacts.fct_dbt__seed_executions", "model.dbt_artifacts.stg_dbt__invocations", "model.dbt_artifacts.models", "model.dbt_artifacts.fct_dbt__invocations", "model.dbt_artifacts.snapshots", "model.dbt_artifacts.fct_dbt__snapshot_executions", "model.dbt_artifacts.fct_dbt__model_executions", "model.dbt_artifacts.test_executions", "model.dbt_artifacts.stg_dbt__exposures", "model.dbt_artifacts.stg_dbt__seeds", "model.dbt_artifacts.dim_dbt__models"]}], "test_runs": [{"name": "failures", "display_name": "Failures", "model_unique_ids": ["model.dbt_demo.my_first_dbt_model", "model.dbt_demo.test_dbt_model"]}, {"name": "passed", "display_name": "Passed", "model_unique_ids": ["model.dbt_demo.my_first_dbt_model", "model.dbt_demo.test_dbt_model"]}, {"name": "no_test", "display_name": "No Tests", "model_unique_ids": ["model.dbt_artifacts.dim_dbt__sources", "model.dbt_artifacts.exposures", "model.dbt_artifacts.tests", "model.dbt_artifacts.stg_dbt__snapshots", "model.dbt_artifacts.seed_executions", "model.dbt_artifacts.dim_dbt__snapshots", "source.dbt_demo.test_source.seattle", "model.dbt_artifacts.model_executions", "model.dbt_artifacts.seeds", "model.dbt_artifacts.stg_dbt__sources", "model.dbt_artifacts.stg_dbt__model_executions", "model.dbt_artifacts.fct_dbt__test_executions", "model.dbt_artifacts.invocations", "model.dbt_artifacts.stg_dbt__seed_executions", "model.dbt_artifacts.stg_dbt__snapshot_executions", "model.dbt_artifacts.dim_dbt__tests", "model.dbt_artifacts.snapshot_executions", "model.dbt_artifacts.dim_dbt__exposures", "model.dbt_artifacts.stg_dbt__tests", "model.dbt_artifacts.dim_dbt__current_models", "model.dbt_artifacts.stg_dbt__test_executions", "model.dbt_demo.my_second_dbt_model", "model.dbt_artifacts.sources", "model.dbt_artifacts.stg_dbt__models", "model.dbt_artifacts.dim_dbt__seeds", "model.dbt_artifacts.fct_dbt__seed_executions", "model.dbt_artifacts.stg_dbt__invocations", "model.dbt_artifacts.models", "model.dbt_artifacts.fct_dbt__invocations", "model.dbt_artifacts.snapshots", "model.dbt_artifacts.fct_dbt__snapshot_executions", "model.dbt_artifacts.fct_dbt__model_executions", "model.dbt_artifacts.test_executions", "model.dbt_artifacts.stg_dbt__exposures", "model.dbt_artifacts.stg_dbt__seeds", "model.dbt_artifacts.dim_dbt__models"]}], "model_runs": [{"name": "success", "display_name": "Successful Runs", "model_unique_ids": ["model.dbt_artifacts.tests", "model.dbt_artifacts.dim_dbt__sources", "model.dbt_artifacts.exposures", "model.dbt_artifacts.stg_dbt__snapshots", "model.dbt_artifacts.seed_executions", "model.dbt_artifacts.dim_dbt__snapshots", "model.dbt_demo.my_first_dbt_model", "model.dbt_artifacts.model_executions", "model.dbt_artifacts.seeds", "model.dbt_artifacts.stg_dbt__sources", "model.dbt_artifacts.stg_dbt__model_executions", "model.dbt_artifacts.fct_dbt__test_executions", "model.dbt_artifacts.stg_dbt__seed_executions", "model.dbt_artifacts.invocations", "model.dbt_artifacts.stg_dbt__snapshot_executions", "model.dbt_artifacts.dim_dbt__tests", "model.dbt_artifacts.snapshot_executions", "model.dbt_artifacts.dim_dbt__exposures", "model.dbt_demo.test_dbt_model", "model.dbt_artifacts.stg_dbt__tests", "model.dbt_artifacts.dim_dbt__current_models", "model.dbt_artifacts.stg_dbt__test_executions", "model.dbt_artifacts.sources", "model.dbt_artifacts.stg_dbt__models", "model.dbt_artifacts.dim_dbt__seeds", "model.dbt_artifacts.stg_dbt__invocations", "model.dbt_artifacts.fct_dbt__seed_executions", "model.dbt_artifacts.models", "model.dbt_artifacts.fct_dbt__invocations", "model.dbt_artifacts.snapshots", "model.dbt_artifacts.fct_dbt__snapshot_executions", "model.dbt_artifacts.fct_dbt__model_executions", "model.dbt_artifacts.test_executions", "model.dbt_artifacts.stg_dbt__seeds", "model.dbt_artifacts.stg_dbt__exposures", "model.dbt_artifacts.dim_dbt__models"]}, {"name": "no_runs", "display_name": "No Runs", "model_unique_ids": ["model.dbt_demo.my_second_dbt_model"]}]}, "lineage": {"nodes": [{"id": "model.dbt_demo.my_first_dbt_model", "type": "model", "sub_type": "table"}, {"id": "model.dbt_demo.my_second_dbt_model", "type": "model", "sub_type": "view"}, {"id": "model.dbt_artifacts.dim_dbt__current_models", "type": "model", "sub_type": "view"}, {"id": "model.dbt_artifacts.dim_dbt__exposures", "type": "model", "sub_type": "view"}, {"id": "model.dbt_artifacts.dim_dbt__models", "type": "model", "sub_type": "view"}, {"id": "model.dbt_artifacts.dim_dbt__seeds", "type": "model", "sub_type": "view"}, {"id": "model.dbt_artifacts.dim_dbt__snapshots", "type": "model", "sub_type": "view"}, {"id": "model.dbt_artifacts.dim_dbt__sources", "type": "model", "sub_type": "view"}, {"id": "model.dbt_artifacts.dim_dbt__tests", "type": "model", "sub_type": "view"}, {"id": "model.dbt_artifacts.fct_dbt__invocations", "type": "model", "sub_type": "view"}, {"id": "model.dbt_artifacts.fct_dbt__model_executions", "type": "model", "sub_type": "view"}, {"id": "model.dbt_artifacts.fct_dbt__seed_executions", "type": "model", "sub_type": "view"}, {"id": "model.dbt_artifacts.fct_dbt__snapshot_executions", "type": "model", "sub_type": "view"}, {"id": "model.dbt_artifacts.fct_dbt__test_executions", "type": "model", "sub_type": "view"}, {"id": "model.dbt_artifacts.exposures", "type": "model", "sub_type": "table"}, {"id": "model.dbt_artifacts.invocations", "type": "model", "sub_type": "table"}, {"id": "model.dbt_artifacts.models", "type": "model", "sub_type": "table"}, {"id": "model.dbt_artifacts.model_executions", "type": "model", "sub_type": "table"}, {"id": "model.dbt_artifacts.seeds", "type": "model", "sub_type": "table"}, {"id": "model.dbt_artifacts.seed_executions", "type": "model", "sub_type": "table"}, {"id": "model.dbt_artifacts.snapshots", "type": "model", "sub_type": "table"}, {"id": "model.dbt_artifacts.snapshot_executions", "type": "model", "sub_type": "table"}, {"id": "model.dbt_artifacts.sources", "type": "model", "sub_type": "table"}, {"id": "model.dbt_artifacts.tests", "type": "model", "sub_type": "table"}, {"id": "model.dbt_artifacts.test_executions", "type": "model", "sub_type": "table"}, {"id": "model.dbt_artifacts.stg_dbt__exposures", "type": "model", "sub_type": "view"}, {"id": "model.dbt_artifacts.stg_dbt__invocations", "type": "model", "sub_type": "view"}, {"id": "model.dbt_artifacts.stg_dbt__models", "type": "model", "sub_type": "view"}, {"id": "model.dbt_artifacts.stg_dbt__model_executions", "type": "model", "sub_type": "view"}, {"id": "model.dbt_artifacts.stg_dbt__seeds", "type": "model", "sub_type": "view"}, {"id": "model.dbt_artifacts.stg_dbt__seed_executions", "type": "model", "sub_type": "view"}, {"id": "model.dbt_artifacts.stg_dbt__snapshots", "type": "model", "sub_type": "view"}, {"id": "model.dbt_artifacts.stg_dbt__snapshot_executions", "type": "model", "sub_type": "view"}, {"id": "model.dbt_artifacts.stg_dbt__sources", "type": "model", "sub_type": "view"}, {"id": "model.dbt_artifacts.stg_dbt__tests", "type": "model", "sub_type": "view"}, {"id": "model.dbt_artifacts.stg_dbt__test_executions", "type": "model", "sub_type": "view"}, {"id": "model.dbt_demo.test_dbt_model", "type": "model", "sub_type": "table"}, {"id": "source.dbt_demo.test_source.seattle", "type": "source", "sub_type": null}], "edges": [["model.dbt_demo.my_second_dbt_model", "model.dbt_demo.my_first_dbt_model"], ["model.dbt_artifacts.dim_dbt__current_models", "model.dbt_artifacts.stg_dbt__model_executions"], ["model.dbt_artifacts.dim_dbt__current_models", "model.dbt_artifacts.stg_dbt__models"], ["model.dbt_artifacts.stg_dbt__model_executions", "model.dbt_artifacts.model_executions"], ["model.dbt_artifacts.stg_dbt__models", "model.dbt_artifacts.models"], ["model.dbt_artifacts.dim_dbt__exposures", "model.dbt_artifacts.stg_dbt__exposures"], ["model.dbt_artifacts.stg_dbt__exposures", "model.dbt_artifacts.exposures"], ["model.dbt_artifacts.dim_dbt__models", "model.dbt_artifacts.stg_dbt__models"], ["model.dbt_artifacts.dim_dbt__seeds", "model.dbt_artifacts.stg_dbt__seeds"], ["model.dbt_artifacts.stg_dbt__seeds", "model.dbt_artifacts.seeds"], ["model.dbt_artifacts.dim_dbt__snapshots", "model.dbt_artifacts.stg_dbt__snapshots"], ["model.dbt_artifacts.stg_dbt__snapshots", "model.dbt_artifacts.snapshots"], ["model.dbt_artifacts.dim_dbt__sources", "model.dbt_artifacts.stg_dbt__sources"], ["model.dbt_artifacts.stg_dbt__sources", "model.dbt_artifacts.sources"], ["model.dbt_artifacts.dim_dbt__tests", "model.dbt_artifacts.stg_dbt__tests"], ["model.dbt_artifacts.stg_dbt__tests", "model.dbt_artifacts.tests"], ["model.dbt_artifacts.fct_dbt__invocations", "model.dbt_artifacts.stg_dbt__invocations"], ["model.dbt_artifacts.stg_dbt__invocations", "model.dbt_artifacts.invocations"], ["model.dbt_artifacts.fct_dbt__model_executions", "model.dbt_artifacts.stg_dbt__model_executions"], ["model.dbt_artifacts.fct_dbt__seed_executions", "model.dbt_artifacts.stg_dbt__seed_executions"], ["model.dbt_artifacts.stg_dbt__seed_executions", "model.dbt_artifacts.seed_executions"], ["model.dbt_artifacts.fct_dbt__snapshot_executions", "model.dbt_artifacts.stg_dbt__snapshot_executions"], ["model.dbt_artifacts.stg_dbt__snapshot_executions", "model.dbt_artifacts.snapshot_executions"], ["model.dbt_artifacts.fct_dbt__test_executions", "model.dbt_artifacts.stg_dbt__test_executions"], ["model.dbt_artifacts.stg_dbt__test_executions", "model.dbt_artifacts.test_executions"], ["model.dbt_demo.test_dbt_model", "source.dbt_demo.test_source.seattle"]]}, "invocations": [{"invocation_id": "841f9fc8-0046-4034-bf28-aa5a5b033624", "detected_at": null, "command": "run", "selected": "dbt_artifacts", "full_refresh": false, "job_url": "None/dags/None/grid", "job_name": null, "job_id": null, "orchestrator": "airflow"}, {"invocation_id": "d73110f7-fdb4-4f84-809d-5ff08be091e1", "detected_at": null, "command": "build", "selected": "dbt_test.example.*", "full_refresh": false, "job_url": "None/dags/None/grid", "job_name": null, "job_id": null, "orchestrator": "airflow"}, {"invocation_id": "9d01892d-8bf4-4636-8b0b-d713b70f40a5", "detected_at": null, "command": "build", "selected": "test_dbt_model", "full_refresh": false, "job_url": "None/dags/None/grid", "job_name": null, "job_id": null, "orchestrator": "airflow"}, {"invocation_id": "7b53887f-ad0d-4909-9116-c699c0ff4dd4", "detected_at": null, "command": "run", "selected": "elementary", "full_refresh": false, "job_url": "None/dags/None/grid", "job_name": null, "job_id": null, "orchestrator": "airflow"}], "resources_latest_invocation": {"model.dbt_artifacts.stg_dbt__exposures": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.dbt_artifacts.dim_dbt__current_models": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.elementary.alerts_dbt_source_freshness": "7b53887f-ad0d-4909-9116-c699c0ff4dd4", "model.elementary.schema_columns_snapshot": "7b53887f-ad0d-4909-9116-c699c0ff4dd4", "model.elementary.dbt_artifacts_hashes": "7b53887f-ad0d-4909-9116-c699c0ff4dd4", "model.dbt_artifacts.sources": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.dbt_artifacts.stg_dbt__seeds": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.elementary.dbt_run_results": "7b53887f-ad0d-4909-9116-c699c0ff4dd4", "model.elementary.elementary_test_results": "7b53887f-ad0d-4909-9116-c699c0ff4dd4", "model.dbt_artifacts.stg_dbt__sources": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.elementary.monitors_runs": "7b53887f-ad0d-4909-9116-c699c0ff4dd4", "model.dbt_artifacts.dim_dbt__models": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.elementary.dbt_columns": "7b53887f-ad0d-4909-9116-c699c0ff4dd4", "model.elementary.snapshot_run_results": "7b53887f-ad0d-4909-9116-c699c0ff4dd4", "model.elementary.dbt_models": "7b53887f-ad0d-4909-9116-c699c0ff4dd4", "model.dbt_artifacts.dim_dbt__tests": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.elementary.metrics_anomaly_score": "7b53887f-ad0d-4909-9116-c699c0ff4dd4", "model.dbt_artifacts.snapshots": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.dbt_artifacts.exposures": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.elementary.anomaly_threshold_sensitivity": "7b53887f-ad0d-4909-9116-c699c0ff4dd4", "model.elementary.dbt_snapshots": "7b53887f-ad0d-4909-9116-c699c0ff4dd4", "model.dbt_artifacts.models": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.dbt_artifacts.dim_dbt__snapshots": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.dbt_artifacts.invocations": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.dbt_artifacts.seed_executions": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.dbt_artifacts.seeds": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.dbt_artifacts.stg_dbt__seed_executions": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.dbt_artifacts.fct_dbt__test_executions": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.dbt_artifacts.fct_dbt__seed_executions": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.elementary.dbt_exposures": "7b53887f-ad0d-4909-9116-c699c0ff4dd4", "model.dbt_artifacts.dim_dbt__sources": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.elementary.model_run_results": "7b53887f-ad0d-4909-9116-c699c0ff4dd4", "model.dbt_demo.test_dbt_model": "9d01892d-8bf4-4636-8b0b-d713b70f40a5", "model.dbt_artifacts.stg_dbt__tests": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.elementary.metadata": "7b53887f-ad0d-4909-9116-c699c0ff4dd4", "model.dbt_artifacts.stg_dbt__models": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.dbt_demo.my_second_dbt_model": "d73110f7-fdb4-4f84-809d-5ff08be091e1", "model.dbt_artifacts.stg_dbt__snapshot_executions": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.dbt_artifacts.fct_dbt__snapshot_executions": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.dbt_artifacts.test_executions": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.elementary.dbt_sources": "7b53887f-ad0d-4909-9116-c699c0ff4dd4", "model.elementary.test_result_rows": "7b53887f-ad0d-4909-9116-c699c0ff4dd4", "model.dbt_artifacts.dim_dbt__exposures": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.elementary.alerts_anomaly_detection": "7b53887f-ad0d-4909-9116-c699c0ff4dd4", "model.elementary.alerts_dbt_tests": "7b53887f-ad0d-4909-9116-c699c0ff4dd4", "model.dbt_artifacts.stg_dbt__snapshots": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.dbt_artifacts.fct_dbt__model_executions": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.dbt_artifacts.stg_dbt__invocations": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.elementary.dbt_metrics": "7b53887f-ad0d-4909-9116-c699c0ff4dd4", "model.elementary.dbt_tests": "7b53887f-ad0d-4909-9116-c699c0ff4dd4", "model.dbt_artifacts.stg_dbt__test_executions": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.dbt_artifacts.model_executions": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.elementary.alerts_schema_changes": "7b53887f-ad0d-4909-9116-c699c0ff4dd4", "model.dbt_artifacts.dim_dbt__seeds": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.dbt_artifacts.fct_dbt__invocations": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.elementary.dbt_invocations": "7b53887f-ad0d-4909-9116-c699c0ff4dd4", "model.dbt_artifacts.stg_dbt__model_executions": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.elementary.alerts_dbt_models": "7b53887f-ad0d-4909-9116-c699c0ff4dd4", "model.elementary.data_monitoring_metrics": "7b53887f-ad0d-4909-9116-c699c0ff4dd4", "model.elementary.dbt_seeds": "7b53887f-ad0d-4909-9116-c699c0ff4dd4", "model.elementary.dbt_source_freshness_results": "7b53887f-ad0d-4909-9116-c699c0ff4dd4", "model.elementary.job_run_results": "7b53887f-ad0d-4909-9116-c699c0ff4dd4", "model.dbt_demo.my_first_dbt_model": "d73110f7-fdb4-4f84-809d-5ff08be091e1", "model.dbt_artifacts.snapshot_executions": "841f9fc8-0046-4034-bf28-aa5a5b033624", "model.dbt_artifacts.tests": "841f9fc8-0046-4034-bf28-aa5a5b033624"}, "invocations_job_identification": {}, "env": {"project_name": "dbt_demo", "env": "dev", "warehouse_type": "snowflake"}, "tracking": {"posthog_api_key": "phc_56XBEzZmh02mGkadqLiYW51eECyYKWPyecVwkGdGUfg", "report_generator_anonymous_user_id": "6eb9c42a-df3e-41a6-aa70-b19e3b27ea61", "anonymous_warehouse_id": "81ff07527f43de9ad409ba3b0711ec5c1e4004f0a1af831969f44cdc208881f5"}}